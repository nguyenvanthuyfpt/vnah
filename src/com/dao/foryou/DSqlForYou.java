package com.dao.foryou;


import com.dao.admin.doc.DSqlAdminDoc;

import com.inf.IConstants;

import com.lib.AppConfigs;


public class DSqlForYou extends DSqlAdminDoc {



    public final String DOCS_RECV_left_DOC_TRAILER_RECV=LEFT_JOIN + TABLE_DOC_TRAILER_RECV + ON + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_DOC_ID + EQUAL + TABLE_DOCSRECV + STOP + DOCSRECV_DOC_ID;
    public final String DOCS_SEND_left_DOC_TRAILER_SEND=LEFT_JOIN + TABLE_DOC_TRAILER_SEND + ON + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_DOC_ID + EQUAL + TABLE_DOCSSEND + STOP + DOCSSEND_DOC_ID;
  
  
    public final String SQL_MENUE_SELECT_ALL_MENUE  =  SELECT + FIELDS("A",new String[]{MENU_ID ,MENU_LEVEL,MENU_TITLE,MENU_URL }) + COMMA + 
                                                            FIELDS("B",new String[]{MENU_ID ,MENU_LEVEL,MENU_TITLE,MENU_URL }) + 
                                                            FROM + MENU_ID + " A" + LEFT_OUTER_JOIN + MENU_ID + " B" + 
                                                            ON + "B." + MENU_LEVEL + EQUAL + "A." + MENU_ID ;
    
    //DocType in here
      public final String SQL_DOCTYPE_SELECT_ALL_DOCTYPE = SELECT + STAR + FROM + TABLE_DOCTYPE + ORDER_BY + DOCTYPE_NAME;
      public final String SQL_DOCTYPE_SELECT_SINGLE_ROW = SELECT + STAR + FROM + TABLE_DOCTYPE + WHERE + DOCTYPE_DOCTYPE_ID + EQUAL + QUESTION;
      public final String SQL_DOCTYPE_ADD_NEW = INSERT_INTO + TABLE_DOCTYPE + FIELDS(DOCTYPE_ALL_FIELDS,true)+ VALUES(DOCTYPE_ALL_FIELDS.length);
      public final String SQL_DOCTYPE_UPDATE = UPDATE + TABLE_DOCTYPE + SET + SETS(DOCTYPE_ALL_FIELDS)+ WHERE + DOCTYPE_DOCTYPE_ID + EQUAL + QUESTION;
      public final String SQL_DOCTYPE_CHECK_NAME = SELECT + STAR + FROM + TABLE_DOCTYPE + WHERE + DOCTYPE_NAME + EQUAL + QUESTION;
      public final String SQL_DOCTYPE_CHECK_NAME_ID = SELECT + STAR + FROM + TABLE_DOCTYPE + WHERE + DOCTYPE_NAME + EQUAL + QUESTION + AND + DOCTYPE_DOCTYPE_ID + DIFF + QUESTION;
      public final String SQL_DOCTYPE_CHECK_CODE_ID = SELECT + STAR + FROM + TABLE_DOCTYPE + WHERE + DOCTYPE_CODE + EQUAL + QUESTION + AND + DOCTYPE_DOCTYPE_ID + DIFF + QUESTION;   
      public final String SQL_DOCTYPE_SELECT_DOCTYPE_BY_ID = SELECT + STAR + FROM + TABLE_DOCTYPE + WHERE + DOCTYPE_DOCTYPE_ID + EQUAL + QUESTION;
      public final String SQL_DOCTYPE_CHECK_CODE = SELECT + STAR + FROM + TABLE_DOCTYPE + WHERE + DOCTYPE_CODE + EQUAL + QUESTION;
    
    //SECURE
        public final String SQL_SECURE_SELECT_ALL_SECURE = SELECT + SECURE_SECURE_ID + COMMA + SECURE_CODE + COMMA + SECURE_NAME + COMMA + SECURE_DESCRIPTION + FROM + TABLE_SECURE + ORDER_BY + SECURE_NAME;
        public final String SQL_SECURE_SELECT_SINGLE_ROW = SELECT + SECURE_SECURE_ID + COMMA + SECURE_CODE + COMMA + SECURE_NAME + COMMA + SECURE_DESCRIPTION + FROM + TABLE_SECURE + WHERE + SECURE_SECURE_ID + EQUAL + QUESTION;
        public final String SQL_SECURE_ADD_NEW = INSERT_INTO + TABLE_SECURE + FIELDS(SECURE_ALL_FIELDS,true) + VALUES(SECURE_ALL_FIELDS.length);
        public final String SQL_SECURE_UPDATE = UPDATE + TABLE_SECURE + SET + SETS(SECURE_ALL_FIELDS) + WHERE + SECURE_SECURE_ID + EQUAL + QUESTION;
        public final String SQL_SECURE_CHECK_NAME = SELECT + STAR + FROM + TABLE_SECURE + WHERE + SECURE_NAME + EQUAL + QUESTION;
        public final String SQL_SECURE_CHECK_NAME_ID = SELECT + STAR + FROM + TABLE_SECURE + WHERE + SECURE_NAME + EQUAL + QUESTION + AND + SECURE_SECURE_ID + DIFF + QUESTION;
        public final String SQL_SECURE_CHECK_CODE_ID = SELECT + STAR + FROM + TABLE_SECURE + WHERE + SECURE_CODE + EQUAL + QUESTION + AND + SECURE_SECURE_ID + DIFF + QUESTION;   
        public final String SQL_SECURE_SELECT_SECURE_BY_ID = SELECT + STAR + FROM + TABLE_SECURE + WHERE + SECURE_SECURE_ID + EQUAL + QUESTION;
        public final String SQL_SECURE_CHECK_CODE = SELECT + STAR + FROM + TABLE_SECURE + WHERE + SECURE_CODE + EQUAL + QUESTION;

       //EXPRESS
        public final String SQL_EXPRESS_SELECT_ALL_EXPRESS = SELECT + STAR + FROM + TABLE_EXPRESS + ORDER_BY + EXPRESS_NAME;
        //public final String SQL_EXPRESS_SELECT_SINGLE_ROW = SELECT + EXPRESS_EXPRESS_ID + COMMA + EXPRESS_CODE + COMMA + EXPRESS_NAME + COMMA + EXPRESS_DESCRIPTION + FROM + TABLE_EXPRESS + WHERE + EXPRESS_EXPRESS_ID + EQUAL + QUESTION;
        public final String SQL_EXPRESS_ADD_NEW = INSERT_INTO + TABLE_EXPRESS + FIELDS(EXPRESS_ALL_FIELDS,true) + VALUES(EXPRESS_ALL_FIELDS.length);
        public final String SQL_EXPRESS_UPDATE = UPDATE + TABLE_EXPRESS + SET + SETS(EXPRESS_ALL_FIELDS) + WHERE + EXPRESS_EXPRESS_ID + EQUAL + QUESTION;
        public final String SQL_EXPRESS_CHECK_NAME = SELECT + STAR + FROM + TABLE_EXPRESS + WHERE + EXPRESS_NAME + EQUAL + QUESTION;
        public final String SQL_EXPRESS_CHECK_NAME_ID = SELECT + STAR + FROM + TABLE_EXPRESS + WHERE + EXPRESS_NAME + EQUAL + QUESTION + AND + EXPRESS_EXPRESS_ID + DIFF + QUESTION;
        public final String SQL_EXPRESS_CHECK_CODE_ID = SELECT + STAR + FROM + TABLE_EXPRESS + WHERE + EXPRESS_CODE + EQUAL + QUESTION + AND + EXPRESS_EXPRESS_ID + DIFF + QUESTION;   
        public final String SQL_EXPRESS_SELECT_EXPRESS_BY_ID = SELECT + STAR + FROM + TABLE_EXPRESS + WHERE + EXPRESS_EXPRESS_ID + EQUAL + QUESTION;
        public final String SQL_EXPRESS_CHECK_CODE = SELECT + STAR + FROM + TABLE_EXPRESS + WHERE + EXPRESS_CODE + EQUAL + QUESTION;
//THE PEN
   public final String SQL_THEPEN_SELECT_ALL_VIA = SELECT + STAR + FROM + TABLE_DOC_THEPEN + ORDER_BY + THEPEN_ID;
  public final String SQL_THEPEN_SELECT_SINGLE_ROW = SELECT + STAR + FROM + TABLE_DOC_THEPEN + WHERE + THEPEN_ID + EQUAL + QUESTION;
  public final String SQL_THEPEN_ADD_NEW = INSERT_INTO + TABLE_DOC_THEPEN + FIELDS(THEPEN_ALL_FIELDS,true) + VALUES(THEPEN_ALL_FIELDS.length);
  public final String SQL_THEPEN_UPDATE = UPDATE + TABLE_DOC_THEPEN + SET + SETS(THEPEN_ALL_FIELDS) + WHERE + THEPEN_ID + EQUAL + QUESTION;
  public final String SQL_THEPEN_SELECT_VIA_BY_ID = SELECT + STAR + FROM + TABLE_DOC_THEPEN + WHERE + THEPEN_ID + EQUAL + QUESTION;
       //VIA
        public final String SQL_VIA_SELECT_ALL_VIA = SELECT + VIA_VIA_ID + COMMA + VIA_CODE + COMMA + VIA_NAME + COMMA + VIA_DESCRIPTION + FROM + TABLE_VIA + ORDER_BY + VIA_NAME;
        public final String SQL_VIA_SELECT_SINGLE_ROW = SELECT + VIA_VIA_ID + COMMA + VIA_CODE + COMMA + VIA_NAME + COMMA + VIA_DESCRIPTION + FROM + TABLE_VIA + WHERE + VIA_VIA_ID + EQUAL + QUESTION;
        public final String SQL_VIA_ADD_NEW = INSERT_INTO + TABLE_VIA + FIELDS(VIA_ALL_FIELDS,true) + VALUES(VIA_ALL_FIELDS.length);
        public final String SQL_VIA_UPDATE = UPDATE + TABLE_VIA + SET + SETS(VIA_ALL_FIELDS) + WHERE + VIA_VIA_ID + EQUAL + QUESTION;
        public final String SQL_VIA_CHECK_NAME = SELECT + STAR + FROM + TABLE_VIA + WHERE + VIA_NAME + EQUAL + QUESTION;
        public final String SQL_VIA_CHECK_NAME_ID = SELECT + STAR + FROM + TABLE_VIA + WHERE + VIA_NAME + EQUAL + QUESTION + AND + VIA_VIA_ID + DIFF + QUESTION;
        public final String SQL_VIA_CHECK_CODE_ID = SELECT + STAR + FROM + TABLE_VIA + WHERE + VIA_CODE + EQUAL + QUESTION + AND + VIA_VIA_ID + DIFF + QUESTION;   
        public final String SQL_VIA_SELECT_VIA_BY_ID = SELECT + STAR + FROM + TABLE_VIA + WHERE + VIA_VIA_ID + EQUAL + QUESTION;
        public final String SQL_VIA_CHECK_CODE = SELECT + STAR + FROM + TABLE_VIA + WHERE + VIA_CODE + EQUAL + QUESTION;
    //BRANCH
     public final String SQL_BRANCH_SELECT_ALL_BRANCH = SELECT + BRANCH_BRANCH_ID + COMMA + BRANCH_CODE + COMMA + BRANCH_NAME + COMMA + BRANCH_DESCRIPTION + FROM + TABLE_BRANCH + ORDER_BY + BRANCH_NAME;
     public final String SQL_BRANCH_SELECT_SINGLE_ROW = SELECT + BRANCH_BRANCH_ID + COMMA + BRANCH_CODE + COMMA + BRANCH_NAME + COMMA + BRANCH_DESCRIPTION + FROM + TABLE_BRANCH + WHERE + BRANCH_BRANCH_ID + EQUAL + QUESTION;
     public final String SQL_BRANCH_ADD_NEW = INSERT_INTO + TABLE_BRANCH + FIELDS(BRANCH_ALL_FIELDS,true) + VALUES(BRANCH_ALL_FIELDS.length);
     public final String SQL_BRANCH_UPDATE = UPDATE + TABLE_BRANCH + SET + SETS(BRANCH_ALL_FIELDS) + WHERE + BRANCH_BRANCH_ID + EQUAL + QUESTION;
     public final String SQL_BRANCH_CHECK_NAME = SELECT + STAR + FROM + TABLE_BRANCH + WHERE + BRANCH_NAME + EQUAL + QUESTION;
     public final String SQL_BRANCH_CHECK_NAME_ID = SELECT + STAR + FROM + TABLE_BRANCH + WHERE + BRANCH_NAME + EQUAL + QUESTION + AND + BRANCH_BRANCH_ID + DIFF + QUESTION;
     public final String SQL_BRANCH_CHECK_CODE_ID = SELECT + STAR + FROM + TABLE_BRANCH + WHERE + BRANCH_CODE + EQUAL + QUESTION + AND + BRANCH_BRANCH_ID + DIFF + QUESTION;   
     public final String SQL_BRANCH_SELECT_BRANCH_BY_ID = SELECT + STAR + FROM + TABLE_BRANCH + WHERE + BRANCH_BRANCH_ID + EQUAL + QUESTION;
     public final String SQL_BRANCH_CHECK_CODE = SELECT + STAR + FROM + TABLE_BRANCH + WHERE + BRANCH_CODE + EQUAL + QUESTION;
    //CLASSIFY
     public final String SQL_CLASSIFY_SELECT_ALL_CLASSIFY = SELECT + CLASSIFY_CLASSIFY_ID + COMMA + CLASSIFY_NUMBERDAY + COMMA + CLASSIFY_NAME + COMMA + CLASSIFY_DESCRIPTION + FROM + TABLE_CLASSIFY + ORDER_BY + CLASSIFY_NAME;
     public final String SQL_CLASSIFY_SELECT_SINGLE_ROW = SELECT + CLASSIFY_CLASSIFY_ID + COMMA + CLASSIFY_NUMBERDAY + COMMA + CLASSIFY_NAME + COMMA + CLASSIFY_DESCRIPTION + FROM + TABLE_CLASSIFY + WHERE + CLASSIFY_CLASSIFY_ID + EQUAL + QUESTION;
     public final String SQL_CLASSIFY_ADD_NEW = INSERT_INTO + TABLE_CLASSIFY + FIELDS(CLASSIFY_ALL_FIELDS,true) + VALUES(CLASSIFY_ALL_FIELDS.length);
     public final String SQL_CLASSIFY_UPDATE = UPDATE + TABLE_CLASSIFY + SET + SETS(CLASSIFY_ALL_FIELDS) + WHERE + CLASSIFY_CLASSIFY_ID + EQUAL + QUESTION;
     public final String SQL_CLASSIFY_CHECK_NAME = SELECT + STAR + FROM + TABLE_CLASSIFY + WHERE + CLASSIFY_NAME + EQUAL + QUESTION;
     public final String SQL_CLASSIFY_CHECK_NAME_ID = SELECT + STAR + FROM + TABLE_CLASSIFY + WHERE + CLASSIFY_NAME + EQUAL + QUESTION + AND + CLASSIFY_CLASSIFY_ID + DIFF + QUESTION;
     public final String SQL_CLASSIFY_CHECK_CODE_ID = SELECT + STAR + FROM + TABLE_CLASSIFY + WHERE + CLASSIFY_NUMBERDAY + EQUAL + QUESTION + AND + CLASSIFY_CLASSIFY_ID + DIFF + QUESTION;   
     public final String SQL_CLASSIFY_SELECT_CLASSIFY_BY_ID = SELECT + STAR + FROM + TABLE_CLASSIFY + WHERE + CLASSIFY_CLASSIFY_ID + EQUAL + QUESTION;
     public final String SQL_CLASSIFY_CHECK_CODE = SELECT + STAR + FROM + TABLE_CLASSIFY + WHERE + CLASSIFY_NUMBERDAY + EQUAL + QUESTION;
    //TRANSFER
     public final String SQL_TRANSFER_SELECT_ALL_TRANSFER = SELECT + STAR + FROM + TABLE_TRANSFER + ORDER_BY + TRANSFER_ID ;
     public final String SQL_TRANSFER_SELECT_SINGLE_ROW = SELECT + STAR+ FROM + TABLE_TRANSFER + WHERE + TRANSFER_ID + EQUAL + QUESTION;
     public final String SQL_TRANSFER_ADD_NEW = INSERT_INTO + TABLE_TRANSFER + FIELDS(TRANSFER_ALL_FIELDS,true) + VALUES(TRANSFER_ALL_FIELDS.length);
     public final String SQL_TRANSFER_UPDATE = UPDATE + TABLE_TRANSFER + SET + SETS(TRANSFER_ALL_FIELDS) + WHERE + TRANSFER_ID + EQUAL + QUESTION;
     public final String SQL_TRANSFER_SELECT_TRANSFER_BY_ID = SELECT + STAR + FROM + TABLE_TRANSFER + WHERE + TRANSFER_ID + EQUAL + QUESTION;
    public final String SQL_TRANSFER_EXIT_IN_STR = SELECT + STAR + FROM + TABLE_TRANSFER + WHERE +  TRANSFER_ID +">0"+ AND  + TRANSFER_ID + IN + OPEN + "#" + CLOSE;
      
    //MAIL_ACCOUNT
         public final String SQL_MAIL_ACCOUNT_CHECK_CODE_UPDATE = SELECT + MAIL_ACCOUNT_ID +  FROM +  TABLE_MAIL_ACCOUNT +  WHERE +  MAIL_ACCOUNT_ID +  IN + OPEN + SELECT +  MAIL_ACCOUNT_ID + FROM + TABLE_MAIL_ACCOUNT + WHERE +  MAIL_ACCOUNT_ID + DIFF + QUESTION + CLOSE +  AND +  MAIL_ACCOUNT_USERMAIL + EQUAL + QUESTION;
         public final String SQL_MAIL_ACCOUNT_CHECK_CODE_INSERT = SELECT + MAIL_ACCOUNT_ID +  FROM +  TABLE_MAIL_ACCOUNT  + WHERE +  MAIL_ACCOUNT_USERMAIL + EQUAL + QUESTION;
         public final String SQL_MAIL_ACCOUNT_SELECT_ALL = SELECT + STAR + FROM + TABLE_MAIL_ACCOUNT + ORDER_BY + MAIL_ACCOUNT_ID + DESC;
         public final String SQL_MAIL_ACCOUNT_SELECT_BY_ID=SELECT + STAR +FROM + TABLE_MAIL_ACCOUNT + WHERE + MAIL_ACCOUNT_ID + EQUAL + QUESTION;
         public final String SQL_MAIL_ACCOUNT_INSERT= INSERT_INTO + TABLE_MAIL_ACCOUNT + FIELDS(MAIL_ACCOUNT_ALL_FIELDS,true) + VALUES(MAIL_ACCOUNT_ALL_FIELDS.length);
         public final String SQL_MAIL_ACCOUNT_UPDATE = UPDATE + TABLE_MAIL_ACCOUNT + SET + SETS(MAIL_ACCOUNT_ALL_FIELDS) + WHERE + MAIL_ACCOUNT_ID + EQUAL + QUESTION;
      
      
       //DATABASE_SERVER
         public final String SQL_DATABASE_SERVER_CHECK_CODE_UPDATE = SELECT + DATABASE_SERVER_ID +  FROM +  TABLE_DATABASE_SERVER +  WHERE +  DATABASE_SERVER_ID +  IN + OPEN + SELECT +  DATABASE_SERVER_ID + FROM + TABLE_DATABASE_SERVER + WHERE +  DATABASE_SERVER_ID + DIFF + QUESTION + CLOSE +  AND +  DATABASE_SERVER_URL + EQUAL + QUESTION;
         public final String SQL_DATABASE_SERVER_CHECK_CODE_INSERT = SELECT + DATABASE_SERVER_ID +  FROM +  TABLE_DATABASE_SERVER + WHERE +  DATABASE_SERVER_URL + EQUAL + QUESTION;
         public final String SQL_DATABASE_SERVER_SELECT_ALL = SELECT + STAR + FROM + TABLE_DATABASE_SERVER + ORDER_BY + DATABASE_SERVER_ID + DESC;
         public final String SQL_DATABASE_SERVER_SELECT_BY_ID=SELECT + STAR +FROM + TABLE_DATABASE_SERVER + WHERE + DATABASE_SERVER_ID + EQUAL + QUESTION;
         public final String SQL_DATABASE_SERVER_INSERT= INSERT_INTO + TABLE_DATABASE_SERVER + FIELDS(DATABASE_SERVER_ALL_FIELDS,true) + VALUES(DATABASE_SERVER_ALL_FIELDS.length);
         public final String SQL_DATABASE_SERVER_UPDATE = UPDATE + TABLE_DATABASE_SERVER + SET + SETS(DATABASE_SERVER_ALL_FIELDS) + WHERE + DATABASE_SERVER_ID + EQUAL + QUESTION;
       //FORM
        public final String SQL_FORM_SELECT_ALL_FORM = SELECT + FORM_FORM_ID + COMMA + FORM_CODE + COMMA + FORM_NAME + COMMA + FORM_DESCRIPTION + FROM + TABLE_FORM + ORDER_BY + FORM_NAME;
        public final String SQL_FORM_SELECT_SINGLE_ROW = SELECT + FORM_FORM_ID + COMMA + FORM_CODE + COMMA + FORM_NAME + COMMA + FORM_DESCRIPTION + FROM + TABLE_FORM + WHERE + FORM_FORM_ID + EQUAL + QUESTION;
        public final String SQL_FORM_ADD_NEW = INSERT_INTO + TABLE_FORM + FIELDS(FORM_ALL_FIELDS,true) + VALUES(FORM_ALL_FIELDS.length);
        public final String SQL_FORM_UPDATE = UPDATE + TABLE_FORM + SET + SETS(FORM_ALL_FIELDS) + WHERE + FORM_FORM_ID + EQUAL + QUESTION;
        public final String SQL_FORM_CHECK_NAME = SELECT + STAR + FROM + TABLE_FORM + WHERE + FORM_NAME + EQUAL + QUESTION;
        public final String SQL_FORM_CHECK_NAME_ID = SELECT + STAR + FROM + TABLE_FORM + WHERE + FORM_NAME + EQUAL + QUESTION + AND + FORM_FORM_ID + DIFF + QUESTION;
        public final String SQL_FORM_CHECK_CODE_ID = SELECT + STAR + FROM + TABLE_FORM + WHERE + FORM_CODE + EQUAL + QUESTION + AND + FORM_FORM_ID + DIFF + QUESTION;   
        public final String SQL_FORM_SELECT_FORM_BY_ID = SELECT + STAR + FROM + TABLE_FORM + WHERE + FORM_FORM_ID + EQUAL + QUESTION;
        public final String SQL_FORM_CHECK_CODE = SELECT + STAR + FROM + TABLE_FORM + WHERE + FORM_CODE + EQUAL + QUESTION;
    //STATUS
     public final String SQL_STATUS_SELECT_ALL_STATUS = SELECT + STATUS_ID + COMMA + STATUS_CODE + COMMA + STATUS_NAME +COMMA+ STATUS_COLOR + COMMA + STATUS_GROUPS+ COMMA + STATUS_DESCRIPTION + FROM + TABLE_STATUS + ORDER_BY + STATUS_NAME + ASC;
     public final String SQL_STATUS_SELECT_SINGLE_ROW = SELECT + STATUS_ID + COMMA + STATUS_CODE + COMMA + STATUS_NAME+ COMMA+ STATUS_COLOR + COMMA + STATUS_GROUPS+ COMMA + STATUS_DESCRIPTION + FROM + TABLE_STATUS + WHERE + STATUS_ID + EQUAL + QUESTION;
     public final String SQL_STATUS_ADD_NEW = INSERT_INTO + TABLE_STATUS + FIELDS(STATUS_ALL_FIELDS,true) + VALUES(STATUS_ALL_FIELDS.length);
     public final String SQL_STATUS_UPDATE = UPDATE + TABLE_STATUS + SET + SETS(STATUS_ALL_FIELDS) + WHERE + STATUS_ID + EQUAL + QUESTION;
     public final String SQL_STATUS_CHECK_NAME = SELECT + STAR + FROM + TABLE_STATUS + WHERE + STATUS_NAME + EQUAL + QUESTION;
     public final String SQL_STATUS_CHECK_NAME_ID = SELECT + STAR + FROM + TABLE_STATUS + WHERE + STATUS_NAME + EQUAL + QUESTION + AND + STATUS_ID + DIFF + QUESTION;
     public final String SQL_STATUS_CHECK_CODE_ID = SELECT + STAR + FROM + TABLE_STATUS + WHERE + STATUS_CODE + EQUAL + QUESTION + AND + STATUS_ID + DIFF + QUESTION;   
     public final String SQL_STATUS_SELECT_STATUS_BY_ID = SELECT + STAR + FROM + TABLE_STATUS + WHERE + STATUS_ID + EQUAL + QUESTION;
     public final String SQL_STATUS_CHECK_CODE = SELECT + STAR + FROM + TABLE_STATUS + WHERE + STATUS_CODE + EQUAL + QUESTION;
     public final String SQL_STATUS_WHERE_DELETE=STATUS_ID +  NOT +  IN +  OPEN + SELECT +  STATUS_ID +  FROM +  TABLE_DOC_RULES + CLOSE + AND +  STATUS_ID +  NOT +  IN +  OPEN + SELECT + STATUS_ID + FROM + TABLE_DOCSSEND + CLOSE +  AND +  STATUS_ID +  NOT + IN + OPEN + SELECT + STATUS_ID + FROM + TABLE_DOCSRECV + CLOSE;
     
    //FROM
     public final String SQL_FROM_CHECK_CODE_UPDATE = SELECT + FROM_CODE + FROM + TABLE_FROM + WHERE +  FROM_ID + IN + OPEN +SELECT +  FROM_ID +  FROM +  TABLE_FROM + WHERE +  FROM_ID + DIFF + QUESTION + CLOSE + AND +  FROM_CODE + EQUAL + QUESTION;
     public final String SQL_FROM_CHECK_CODE_ADD = SELECT + STAR + FROM + TABLE_FROM+ WHERE + FROM_CODE + EQUAL + QUESTION;
     public final String SQL_FROM_SELECT_ALL_FROM = SELECT + STAR + FROM + TABLE_FROM; 
     public final String SQL_FROM_SELECT_ALL_FROM_IN_MEMBER = SELECT + FROM_VN_NAME + FROM + TABLE_FROM + WHERE + FROM_ID + IN + OPEN + "#" +  CLOSE; 
     public final String SQL_FROM_ADD_NEW = INSERT_INTO + TABLE_FROM + FIELDS(FROM_ALL_FIELDS,true) + VALUES(FROM_ALL_FIELDS.length);
     public final String SQL_FROM_UPDATE = UPDATE + TABLE_FROM + SET + SETS(FROM_ALL_FIELDS) + WHERE + FROM_ID + EQUAL + QUESTION;
     public final String SQL_FROM_SELECT_FROM_BY_ID = SELECT + STAR + FROM + TABLE_FROM + WHERE + FROM_ID + EQUAL + QUESTION;
    public final String SQL_FROM_SELECT_IN_ID=SELECT + STAR + FROM + TABLE_FROM + WHERE + FROM_ID + IN + OPEN + "#"  +  CLOSE;
    public final String SQL_ALLDOCRECV_SELECT_IN_ID=SELECT + STAR + FROM + TABLE_DOCSRECV + WHERE + DOCSRECV_DOC_ID + IN + OPEN + "#"  +  CLOSE;
    //fFORYOU
     public final String SQL_FORYOU_SELECT_ALL_FORYOU = SELECT + STAR + FROM + TABLE_FORYOU + ORDER_BY + FORYOU_DATECREATE;
     public final String SQL_FORYOU_ADD_NEW = INSERT_INTO + TABLE_FORYOU + FIELDS(FORYOU_ALL_FIELDS,true) + VALUES(FORYOU_ALL_FIELDS.length);
     public final String SQL_FORYOU_UPDATE = UPDATE + TABLE_FORYOU + SET + SETS(FORYOU_ALL_FIELDS) + WHERE + FORYOU_ID + EQUAL + QUESTION;
     
    public final String SQL_FORYOU_UPDATE_ACTIVE = UPDATE + TABLE_FORYOU + SET + FORYOU_STATUS + EQUAL + 0 + WHERE + FORYOU_DATETO + "<=" + QUESTION;

     
     
    public final String SQL_FORYOU_SELECT_FORYOU_BY_ID =SELECT + " C." + USERS_FULLNAME + AS + " NHAN " + COMMA + "B." + USERS_FULLNAME + COMMA + " A.* " + FROM + TABLE_FORYOU + " A " + INNER_JOIN + TABLE_USERS + " B " + ON + " A. " + FORYOU_USER_ID_FROM + EQUAL + " B. " + USERS_USER_ID +  INNER_JOIN + TABLE_USERS +  " C " +  ON +  " A." + FORYOU_USER_ID_TO + EQUAL + " C." + USERS_USER_ID +  WHERE + " A."+ FORYOU_ID + EQUAL + QUESTION ;
    public final String SQL_FORYOU_SELECT_BY_USER_ID_TO=SELECT + " B." + USERS_FULLNAME + COMMA + " A.*" +  FROM + TABLE_FORYOU +  " A " +  INNER_JOIN + TABLE_USERS + " B" +  ON + " A." + FORYOU_USER_ID_FROM + EQUAL + " B." + USERS_USER_ID + WHERE + " A." + FORYOU_USER_ID_TO + EQUAL + QUESTION;
    public final String SQL_FORYOU_SELECT_BY_USER_ID_FROM=SELECT + " C." + USERS_FULLNAME + AS + "NHAN" + COMMA + " B." + USERS_FULLNAME + COMMA + " A.*" + FROM +  TABLE_FORYOU + " A " +  INNER_JOIN + TABLE_USERS +  " B " +  ON + " A." + FORYOU_USER_ID_FROM + EQUAL + "  B." + USERS_USER_ID +  INNER_JOIN +  TABLE_USERS +  " C" +  ON + " A." + FORYOU_USER_ID_TO + EQUAL + "C." + USERS_USER_ID +  WHERE + " A." + FORYOU_USER_ID_FROM + EQUAL + QUESTION;
    public final String SQL_SELECT_USER_DIFF_USER_ID= SELECT + TABLE_FORYOU_OFFICERS + STOP + STAR + COMMA + TABLE_USERS + STOP + USERS_FULLNAME + FROM + TABLE_FORYOU_OFFICERS + LEFT_JOIN + TABLE_FORYOU_RULES + ON + TABLE_FORYOU_OFFICERS + STOP + FORYOU_OFFICERS_RULE_ID + EQUAL + TABLE_FORYOU_RULES + STOP + FORYOU_RULES_RULE_ID + LEFT_JOIN + TABLE_FORYOU_BOSS + ON + TABLE_FORYOU_RULES + STOP + FORYOU_RULES_RULE_ID + EQUAL + TABLE_FORYOU_BOSS + STOP + FORYOU_BOSS_RULE_ID + LEFT_JOIN + TABLE_USERS + ON + TABLE_FORYOU_OFFICERS + STOP + FORYOU_OFFICERS_USER_ID + EQUAL + TABLE_USERS + STOP + USERS_USER_ID + WHERE + TABLE_FORYOU_RULES + STOP + FORYOU_RULES_ACTIVE + DIFF + 0 +  AND + TABLE_FORYOU_BOSS + STOP + FORYOU_BOSS_USER_ID + EQUAL + QUESTION + AND + TABLE_FORYOU_RULES + STOP + FORYOU_RULES_WORKFLOW_ID + EQUAL + QUESTION  + ORDER_BY + TABLE_FORYOU_OFFICERS + STOP+ FORYOU_OFFICERS_USER_ID + DESC; 
    public final String SQL_CHECK_DELETE_FORYOU = SELECT + DOC_TRAILER_RECV_DOC_ID + FROM + TABLE_DOC_TRAILER_RECV + WHERE + DOC_TRAILER_RECV_FORYOU_ID + DIFF + 0 + AND + DOC_TRAILER_RECV_FORYOU_ID + EQUAL + QUESTION + UNION + SELECT + DOC_TRAILER_SEND_DOC_ID + FROM + TABLE_DOC_TRAILER_SEND + WHERE + DOC_TRAILER_SEND_FORYOU_ID + DIFF + 0 + AND + DOC_TRAILER_SEND_FORYOU_ID + EQUAL + QUESTION;
    public final String SQL_SELECT_DETAIL_FORYOU_RECV = SELECT + TABLE_DOCSRECV + STOP + STAR + COMMA + TABLE_USERS + STOP + USERS_FULLNAME + COMMA + TABLE_FORM + STOP + FORM_NAME + AS + "NAME_FORM" + COMMA + TABLE_STATUS + STOP + STATUS_NAME + AS + "NAME_STATUS" + COMMA + TABLE_EXPRESS + STOP + EXPRESS_NAME + AS + "NAME_EXPRESS" + COMMA + TABLE_VIA + STOP + VIA_NAME + AS + "NAME_VIA" + COMMA + TABLE_DOCTYPE + STOP + DOCTYPE_NAME + AS + "NAME_DOCTYPE" + COMMA + TABLE_SECURE + STOP + SECURE_NAME + AS + "NAME_SECURE" + COMMA + TABLE_DOSSIERS + STOP + DOSSIERS_NAME + AS + "NAME_DOSSIERS" + FROM + TABLE_DOCSRECV + LEFT_JOIN + TABLE_DOC_TRAILER_RECV + ON + TABLE_DOCSRECV + STOP + DOCSRECV_DOC_ID + EQUAL + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_DOC_ID + LEFT_JOIN + TABLE_USERS + ON + TABLE_DOCSRECV + STOP + DOCSRECV_USER_ID + EQUAL + TABLE_USERS + STOP + USERS_USER_ID + LEFT_JOIN + TABLE_FORM + ON + TABLE_DOCSRECV + STOP + DOCSRECV_FORM_ID + EQUAL + TABLE_FORM + STOP + FORM_FORM_ID + LEFT_JOIN + TABLE_STATUS + ON + TABLE_DOCSRECV + STOP + DOCSRECV_STATUS_ID + EQUAL + TABLE_STATUS + STOP + STATUS_ID + LEFT_JOIN + TABLE_EXPRESS + ON + TABLE_DOCSRECV + STOP + DOCSRECV_EXPRESS_ID + EQUAL + TABLE_EXPRESS + STOP + EXPRESS_EXPRESS_ID  + LEFT_JOIN + TABLE_VIA  + ON + TABLE_DOCSRECV + STOP + DOCSRECV_VIA_ID + EQUAL + TABLE_VIA + STOP + VIA_VIA_ID + LEFT_JOIN + TABLE_DOCTYPE + ON + TABLE_DOCSRECV + STOP + DOCSRECV_DOCTYPE_ID + EQUAL + TABLE_DOCTYPE + STOP + DOCTYPE_DOCTYPE_ID + LEFT_JOIN + TABLE_SECURE + ON + TABLE_DOCSRECV + STOP + DOCSRECV_SECURE_ID + EQUAL + TABLE_SECURE + STOP + SECURE_SECURE_ID + LEFT_JOIN + TABLE_DOSSIERS + ON + TABLE_DOCSRECV + STOP + DOCSRECV_DOSSIERS_ID + EQUAL + TABLE_DOSSIERS + STOP + DOSSIERS_ID + WHERE + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_FORYOU_ID + DIFF + 0 + AND +  TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION + AND +  TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_FORYOU_ID + EQUAL + QUESTION + ORDER_BY + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + DESC; 
    public final String SQL_SELECT_DETAIL_FORYOU_SEND = SELECT + TABLE_DOCSSEND + STOP + STAR + COMMA + TABLE_USERS + STOP + USERS_FULLNAME + COMMA + TABLE_FORM + STOP + FORM_NAME + AS + "NAME_FORM" + COMMA + TABLE_STATUS + STOP + STATUS_NAME + AS + "NAME_STATUS" + COMMA + TABLE_EXPRESS + STOP + EXPRESS_NAME + AS + "NAME_EXPRESS" + COMMA + TABLE_VIA + STOP + VIA_NAME + AS + "NAME_VIA" + COMMA + TABLE_DOCTYPE + STOP + DOCTYPE_NAME + AS + "NAME_DOCTYPE" + COMMA + TABLE_SECURE + STOP + SECURE_NAME + AS + "NAME_SECURE" + COMMA + TABLE_DOSSIERS + STOP + DOSSIERS_NAME + AS + "NAME_DOSSIERS" + FROM + TABLE_DOCSSEND + LEFT_JOIN + TABLE_DOC_TRAILER_SEND + ON + TABLE_DOCSSEND + STOP + DOCSSEND_DOC_ID + EQUAL + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_DOC_ID + LEFT_JOIN + TABLE_USERS + ON + TABLE_DOCSSEND + STOP + DOCSRECV_USER_ID + EQUAL + TABLE_USERS + STOP + USERS_USER_ID + LEFT_JOIN + TABLE_FORM + ON + TABLE_DOCSSEND + STOP + DOCSSEND_FORM_ID + EQUAL + TABLE_FORM + STOP + FORM_FORM_ID + LEFT_JOIN + TABLE_STATUS + ON + TABLE_DOCSSEND + STOP + DOCSSEND_STATUS_ID + EQUAL + TABLE_STATUS + STOP + STATUS_ID + LEFT_JOIN + TABLE_EXPRESS + ON + TABLE_DOCSSEND + STOP + DOCSSEND_EXPRESS_ID + EQUAL + TABLE_EXPRESS + STOP + EXPRESS_EXPRESS_ID  + LEFT_JOIN + TABLE_VIA  + ON + TABLE_DOCSSEND + STOP + DOCSSEND_VIA_ID + EQUAL + TABLE_VIA + STOP + VIA_VIA_ID + LEFT_JOIN + TABLE_DOCTYPE + ON + TABLE_DOCSSEND + STOP + DOCSSEND_DOCTYPE_ID + EQUAL + TABLE_DOCTYPE + STOP + DOCTYPE_DOCTYPE_ID + LEFT_JOIN + TABLE_SECURE + ON + TABLE_DOCSSEND + STOP + DOCSSEND_SECURE_ID + EQUAL + TABLE_SECURE + STOP + SECURE_SECURE_ID + LEFT_JOIN + TABLE_DOSSIERS + ON + TABLE_DOCSSEND + STOP + DOCSSEND_DOSSIERS_ID + EQUAL + TABLE_DOSSIERS + STOP + DOSSIERS_ID + WHERE + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_FORYOU_ID + DIFF + 0 + AND +  TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION + AND +  TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_FORYOU_ID + EQUAL + QUESTION + ORDER_BY + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + DESC; 
  
    //dossiers
    public final String SQL_DOSSIERS_CHECK_ID_EXITS_IN_DOCS=SELECT +  "DOSSIERS_ID" +  FROM +  OPEN + SELECT +  "DOSSIERS_ID" + FROM + TABLE_DOCSRECV + UNION + SELECT + "DOSSIERS_ID" + FROM + TABLE_DOCSSEND + CLOSE +  "CHECK1" +  WHERE +  "DOSSIERS_ID" + EQUAL + QUESTION;
    public final String SQL_DOSSIERS_CHECK_CODE_ADD = SELECT + STAR + FROM + TABLE_DOSSIERS+ WHERE + DOSSIERS_CODE + EQUAL + QUESTION  + AND + DOSSIERS_CREATOR + EQUAL + QUESTION;
    public final String SQL_DOSSIERS_CHECK_CODE_UPDATE = SELECT +  DOSSIERS_CODE +   FROM +  TABLE_DOSSIERS +  WHERE +  DOSSIERS_ID +  IN + OPEN + SELECT +  DOSSIERS_ID +  FROM +  TABLE_DOSSIERS +  WHERE +  DOSSIERS_ID + DIFF + QUESTION + CLOSE +  AND +  DOSSIERS_CODE + EQUAL + QUESTION + AND + DOSSIERS_CREATOR + EQUAL + QUESTION;
    public final String SQL_SELECT_ALL_DOSSIERS_BY_USERID=SELECT + STAR + FROM + TABLE_DOSSIERS + WHERE + DOSSIERS_CREATOR + EQUAL+ QUESTION + AND + DOSSIERS_PERMISSION + EQUAL + 0 + ORDER_BY + DOSSIERS_ID + DESC;
    
    public final String SQL_SELECT_ALL_DOSSIERS=SELECT + STAR + FROM + TABLE_DOSSIERS + WHERE + DOSSIERS_CREATOR + EQUAL+ QUESTION+ ORDER_BY + DOSSIERS_ID + DESC;
    public final String SQL_DOSSIERS_ADD_NEW = INSERT_INTO + TABLE_DOSSIERS + FIELDS(DOSSIERS_ALL_FIELDS,true) + VALUES(DOSSIERS_ALL_FIELDS.length);
    public final String SQL_DOSSIERS_UPDATE = UPDATE + TABLE_DOSSIERS+ SET + SETS(DOSSIERS_ALL_FIELDS) + WHERE + DOSSIERS_ID + EQUAL + QUESTION;
    public final String SQL_SELECT_DOSSIERS_BY_ID=SELECT + STAR + FROM + TABLE_DOSSIERS + WHERE + DOSSIERS_ID + EQUAL + QUESTION;
    public final String SQL_SELECT_ALL_DOSSIERS_SEARCH=SELECT + STAR + FROM + TABLE_DOSSIERS;
    //docsrecv
    public final String SQL_DOCSRECV_CHECK_CODE_ADD = SELECT + STAR + FROM + TABLE_DOCSRECV+ WHERE + DOCSRECV_DOCCODE + EQUAL + QUESTION;
    public final String SQL_DOCSRECV_CHECK_ADD_FROM_ID  = AND + DOCSRECV_FROM_ID + EQUAL + QUESTION;
    public final String SQL_DOCSRECV_CHECK_ADD_DOC_DATE = AND + DOCSRECV_DOCDATE + EQUAL + QUESTION;
    
    public final String SQL_DOCSRECV_CHECK_CODE_UPDATE = SELECT + DOCSRECV_DOCCODE +  FROM + TABLE_DOCSRECV + WHERE + DOCSRECV_DOC_ID + IN + OPEN + SELECT + DOCSRECV_DOC_ID + FROM +  TABLE_DOCSRECV + WHERE + DOCSRECV_DOC_ID + DIFF + QUESTION + CLOSE + AND + DOCSRECV_DOCCODE + EQUAL +QUESTION ;
    public final String SQL_DOCRECV_WHERE=WHERE + TABLE_DOCSRECV + STOP  + DOCSRECV_USER_ID + EQUAL + QUESTION + OR + TABLE_DOC_TRAILER_RECV + STOP+  DOC_TRAILER_RECV_USERRECV_ID +  EQUAL + QUESTION;
    public final String SQL_UPDATE_DOCSRECV_STATUS_ID=UPDATE + TABLE_DOCSRECV +  SET +  DOCSRECV_STATUS_ID + EQUAL + QUESTION +  WHERE +  DOCSRECV_DOC_ID + EQUAL + QUESTION;
    //phan laij
    public final String SQL_UPDATE_DOCSRECV_CLASSIFY_ID=UPDATE + TABLE_DOCSRECV +  SET +  DOCSRECV_CLASSIFY_ID + EQUAL + QUESTION +  WHERE +  DOCSRECV_DOC_ID + EQUAL + QUESTION;
    public final String SQL_UPDATE_DOCSSEND_CLASSIFY_ID=UPDATE + TABLE_DOCSSEND +  SET +  DOCSSEND_CLASSIFY_ID + EQUAL + QUESTION +  WHERE +  DOCSSEND_DOC_ID + EQUAL + QUESTION;
    
    public final String SQL_UPDATE_DOC_TRAILER_RECV_VIEW=UPDATE + TABLE_DOC_TRAILER_RECV +  SET +  DOC_TRAILER_RECV_VIEWS + EQUAL + QUESTION + COMMA  +  DOC_TRAILER_RECV_READED + EQUAL + 1 +  WHERE + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_VIEWS + EQUAL + 1;
    public final String SQL_UPDATE_DOCSRECV_DOSSIER_ID = UPDATE + TABLE_DOCSRECV +  SET +  DOCSRECV_DOSSIERS_ID + EQUAL + QUESTION +  WHERE +  DOCSRECV_DOC_ID + EQUAL + QUESTION;
    public final String SQL_UPDATE_DOCSSEND_DOSSIER_ID = UPDATE + TABLE_DOCSSEND +  SET +  DOCSSEND_DOSSIERS_ID + EQUAL + QUESTION +  WHERE +  DOCSSEND_DOC_ID + EQUAL + QUESTION;
    public final String SQL_INSERT_DOSSIER = INSERT_INTO + TABLE_DOC_DOSSIERS + FIELDS(DOC_DOSSIERS_ALL_FIELDS,true) + OPEN + SELECT + QUESTION + COMMA + QUESTION + COMMA  + DOSSIERS_ID + FROM + TABLE_DOSSIERS + WHERE + DOSSIERS_ID + EQUAL + QUESTION + AND + DOSSIERS_CREATOR + EQUAL + QUESTION + AND +  DOSSIERS_ID + NOT + IN + OPEN + SELECT + DOC_DOSSIERS_DOSSIERS_ID + FROM + TABLE_DOC_DOSSIERS + WHERE + DOC_DOSSIERS_DOC_ID + EQUAL + QUESTION + AND + DOC_DOSSIERS_DOSSIERS_ID + EQUAL + QUESTION + CLOSE + CLOSE;
    public final String SQL_UPDATE_DOCSSEND_STATUS_ID=UPDATE + TABLE_DOCSSEND +  SET +  DOCSSEND_STATUS_ID + EQUAL + QUESTION +  WHERE +  DOCSSEND_DOC_ID + EQUAL + QUESTION;
    public final String SQL_DOCSRECV_ADD_NEW = INSERT_INTO + TABLE_DOCSRECV + FIELDS(DOCSRECV_ALL_FIELDS,true) + VALUES(DOCSRECV_ALL_FIELDS.length);
    public final String SQL_DOCSRECV_UPDATE = UPDATE + TABLE_DOCSRECV+ SET + SETS(DOCSRECV_ALL_FIELDS) + WHERE + DOCSRECV_DOC_ID + EQUAL + QUESTION;
    public final String SQL_SELECT_DOCSRECV_BY_ID="SELECT A.*,B.FULLNAME FROM DOCS_RECV A LEFT JOIN USERS B ON A.USER_ID=B.USER_ID WHERE A.DOC_ID=?";
    public final String SQL_SELECT_DOCSRECV_BY_TOP=SELECT + MAX(DOCSRECV_DOC_ID) + FROM + TABLE_DOCSRECV + WHERE + DOCSRECV_USER_ID + EQUAL + QUESTION;


    public final String SQL_SELECT_DOCSRECV_BY_MAX_ID=SELECT + TABLE_DOCSRECV + STOP + STAR + COMMA + TABLE_USERS + STOP + USERS_FULLNAME + FROM + TABLE_DOCSRECV + LEFT_JOIN + TABLE_USERS + ON + TABLE_DOCSRECV + STOP + DOCSRECV_USER_ID + EQUAL + TABLE_USERS + STOP + USERS_USER_ID + WHERE  + DOCSRECV_DOC_ID + IN + OPEN + "#" + CLOSE;
    public final String SQL_SELECT_DOCSSEND_BY_MAX_ID=SELECT + TABLE_DOCSSEND + STOP + STAR + COMMA + TABLE_USERS + STOP + USERS_FULLNAME + FROM + TABLE_DOCSSEND + LEFT_JOIN + TABLE_USERS + ON + TABLE_DOCSSEND + STOP + DOCSSEND_USER_ID + EQUAL + TABLE_USERS + STOP + USERS_USER_ID + WHERE  + DOCSSEND_DOC_ID + IN + OPEN + "#" + CLOSE;


    public final String SQL_DOCSRECV_BLOCK_FILE_UPDATE = UPDATE + TABLE_FILESRECV+ SET + FILESRECV_FILE_ID_BLOCK + EQUAL + QUESTION + WHERE + FILESRECV_DOC_ID + EQUAL + QUESTION;
    public final String SQL_SELECT_DOCSRECV_COUNT_OF_YEAR=SELECT + COUNT + OPEN + DOCSRECV_DOC_ID + CLOSE + FROM + TABLE_DOCSRECV + WHERE + DOCSRECV_TIMECREATE + ">" + QUESTION + AND + DOCSRECV_TIMECREATE + "<=" + QUESTION;


//filesRecv
    public final String SQL_SELECT_FILERECV_BY_ID=SELECT + STAR + FROM + TABLE_FILESRECV + WHERE + FILESRECV_ID + EQUAL + QUESTION;
    public final String SQL_FILESRECV_ADD_NEW = INSERT_INTO + TABLE_FILESRECV+ FIELDS(FILESRECV_ALL_FIELDS,true) + VALUES(FILESRECV_ALL_FIELDS.length);
    public final String SQL_FILESRECV_UPDATE = UPDATE + TABLE_FILESRECV+ SET + SETS(FILESRECV_ALL_FIELDS) + WHERE + FILESRECV_ID + EQUAL + QUESTION;
    public final String SQL_SELECT_FILESRECV_BY_ID=SELECT + STAR + FROM + TABLE_FILESRECV+ WHERE + FILESRECV_DOC_ID + EQUAL + QUESTION;
    public final String SQL_TABLE_ALL_DOCSRECV="(SELECT DOCS_RECV.DOC_ID,USERS.FULLNAME,DOCS_RECV.DOCCODE,DOCS_RECV.ABSTRACT, DOCS_RECV.DOCDATE,DOCS_RECV.LOCALDATE,DOCS_RECV.DEADLINE,DOCS_RECV.CLASSIFY_ID,CLASSIFY.NAME AS CLASSIFY_NAME ,DOCS_RECV.USER_ID ,DOC_TRAILER_RECV.TIMESEND,STATUS.NAME AS NAME_STATUS,DOCS_RECV.STATUS_ID AS STATUS_ID,DOC_TRAILER_RECV.READED,STATUS.COLOR,DOC_TRAILER_RECV.FORYOU_ID,DOCS_RECV.DOSSIERS_ID,DOC_TRAILER_RECV.VIEWS ,EXPRESS.EXPRESS_COLOR,DOCTYPE.NAME AS DOCTYPENAME,DOC_FROM.VN_NAME AS FROMNAME FROM DOCS_RECV  LEFT JOIN DOC_TRAILER_RECV ON DOC_TRAILER_RECV.DOC_ID=DOCS_RECV.DOC_ID LEFT JOIN CLASSIFY ON DOCS_RECV.CLASSIFY_ID=CLASSIFY.CLASSIFY_ID  LEFT JOIN USERS ON DOC_TRAILER_RECV.USERSEND_ID=USERS.USER_ID  LEFT JOIN STATUS ON STATUS.STATUS_ID=DOCS_RECV.STATUS_ID  LEFT JOIN EXPRESS ON EXPRESS.EXPRESS_ID=DOCS_RECV.EXPRESS_ID LEFT JOIN DOCTYPE ON DOCTYPE.DOCTYPE_ID=DOCS_RECV.DOCTYPE_ID  LEFT JOIN DOC_FROM ON DOC_FROM.FROM_ID=DOCS_RECV.FROM_ID  WHERE DOC_TRAILER_RECV.BLOCK=0 AND  DOC_TRAILER_RECV.USERRECV_ID=?  #) AS DOCSRECV ";
    
    public final String SQL_DOCSRECV_CHECK_FORYOU= SELECT + STAR + FROM + TABLE_DOC_TRAILER_RECV + WHERE + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERSEND_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_FORYOU_ID + DIFF + 0 + AND + DOC_TRAILER_SEND_FORYOU_ID + EQUAL + OPEN + SELECT + FORYOU_ID + FROM + TABLE_FORYOU + WHERE + FORYOU_STATUS + DIFF + 0 + AND + FORYOU_WORKFLOW_ID + EQUAL + 1 + AND + FORYOU_USER_ID_FROM + EQUAL + QUESTION + AND + FORYOU_DATEFROM + "<=" + QUESTION + AND + FORYOU_DATETO + ">=" + QUESTION + CLOSE;
    
    public final String SQL_DOCSEND_CHECK_FORYOU= SELECT + STAR + FROM + TABLE_DOC_TRAILER_SEND + WHERE + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERSEND_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_FORYOU_ID + DIFF + 0 + AND + DOC_TRAILER_SEND_FORYOU_ID + EQUAL + OPEN + SELECT + FORYOU_ID + FROM + TABLE_FORYOU + WHERE + FORYOU_STATUS + DIFF + 0 + AND + FORYOU_WORKFLOW_ID + EQUAL + 2 + AND + FORYOU_USER_ID_FROM + EQUAL + QUESTION + AND + FORYOU_DATEFROM + "<=" + QUESTION + AND + FORYOU_DATETO + ">=" + QUESTION + CLOSE;

    
    public final String SQL_SELECT_DOC_GET_STATUSES = SELECT + TABLE_DOC_RULES + STOP + DOC_RULES_STATUSES + FROM + TABLE_DOC_BOSS + LEFT_JOIN + TABLE_DOC_RULES + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_BOSS + STOP + DOC_BOSS_RULE_ID + WHERE + TABLE_DOC_RULES + STOP + DOC_RULES_ACTIVE + DIFF + 0 + AND + TABLE_DOC_RULES + STOP + DOC_RULES_WORKFLOW_ID + EQUAL + QUESTION + AND + TABLE_DOC_BOSS + STOP + DOC_BOSS_USER_ID + EQUAL + QUESTION;    
    
    public final String SQL_TABLE_ALL_DOCSRECV_OBSERVER=SELECT +  TABLE_USERS + STOP + USERS_FULLNAME + COMMA + TABLE_DOCSRECV + STOP + DOCSRECV_DOC_ID + COMMA + TABLE_DOCSRECV + STOP + DOCSRECV_DOCCODE + COMMA + TABLE_DOCSRECV + STOP + DOCSRECV_LOCALDATE + COMMA + TABLE_DOCSRECV + STOP + DOCSRECV_ABSTRACT + COMMA + TABLE_DOCSRECV + STOP + DOCSRECV_DOCDATE + COMMA + TABLE_DOCSRECV + STOP + DOCSRECV_DEADLINE + COMMA + TABLE_DOCSRECV + STOP + DOCSRECV_USER_ID + COMMA + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + AS + DOC_TRAILER_RECV_TIMESEND + COMMA + TABLE_STATUS + STOP + STATUS_NAME + AS + "NAME_STATUS" + COMMA + TABLE_STATUS + STOP + STATUS_COLOR + COMMA + 1 + AS +  DOC_TRAILER_RECV_READED + COMMA + 0 +  AS +  DOC_TRAILER_RECV_FORYOU_ID + COMMA + 1 + AS + DOC_TRAILER_RECV_VIEWS + COMMA + TABLE_EXPRESS + STOP + EXPRESS_COLOR + COMMA + TABLE_DOCSRECV + STOP + DOCSRECV_STATUS_ID + COMMA + " CLASSIFY.NAME AS CLASSIFY_NAME " + COMMA + TABLE_FROM + STOP + FROM_VN_NAME +  AS +  "FROMNAME" +  FROM +  TABLE_DOCSRECV + LEFT_JOIN + TABLE_USERS +  ON +  TABLE_DOCSRECV + STOP + DOCSRECV_USER_ID + EQUAL + TABLE_USERS + STOP + USERS_USER_ID  +  LEFT_JOIN +  TABLE_STATUS + ON +  TABLE_STATUS + STOP + STATUS_ID + EQUAL + TABLE_DOCSRECV + STOP + DOCSRECV_STATUS_ID +   LEFT_JOIN + TABLE_DOSSIERS + ON +"DOSSIERS.ID=DOCS_RECV.DOSSIERS_ID LEFT JOIN EXPRESS ON EXPRESS.EXPRESS_ID=DOCS_RECV.EXPRESS_ID  LEFT JOIN DOC_FROM ON DOC_FROM.FROM_ID=DOCS_RECV.FROM_ID LEFT JOIN CLASSIFY ON DOCS_RECV.CLASSIFY_ID=CLASSIFY.CLASSIFY_ID  " ;
    public final String SQL_SEARCH_DOCSRECV_FIELDS="USERS.FULLNAME,DOCS_RECV.DOC_ID,DOCS_RECV.DOCCODE,DOCS_RECV.ABSTRACT,DOCS_RECV.DOCDATE,DOCS_RECV.DEADLINE,DOCS_RECV.USER_ID,DOCS_RECV.TIMECREATE AS TIMESEND,STATUS.NAME AS NAME_STATUS,STATUS.COLOR,1 AS READED,EXPRESS.EXPRESS_COLOR";
    public final String SQL_DOCSRECV_SEARCH="SELECT #,DOCTYPE.NAME,CLASSIFY.NAME AS CLASSIFY_NAME FROM DOCS_RECV LEFT JOIN USERS ON DOCS_RECV.USER_ID=USERS.USER_ID LEFT JOIN CLASSIFY ON DOCS_RECV.CLASSIFY_ID=CLASSIFY.CLASSIFY_ID LEFT JOIN STATUS ON STATUS.STATUS_ID=DOCS_RECV.STATUS_ID LEFT JOIN DOCTYPE ON DOCTYPE.DOCTYPE_ID=DOCS_RECV.DOCTYPE_ID LEFT JOIN EXPRESS ON EXPRESS.EXPRESS_ID=DOCS_RECV.EXPRESS_ID";
    
    public final String SQL_SEARCH_DOCSRECV="SELECT #,CLASSIFY.NAME AS CLASSIFY_NAME FROM DOCS_RECV LEFT JOIN USERS ON DOCS_RECV.USER_ID=USERS.USER_ID LEFT JOIN STATUS ON STATUS.STATUS_ID=DOCS_RECV.STATUS_ID LEFT JOIN CLASSIFY ON DOCS_RECV.CLASSIFY_ID=CLASSIFY.CLASSIFY_ID " ;
    
    
    
    public final String SQL_DOCSSEND_CHECK_CODE_ADD = SELECT + STAR + FROM + TABLE_DOCSSEND+ WHERE + DOCSSEND_DOCCODE + EQUAL + QUESTION;
    public final String SQL_DOCSSEND_CHECK_ADD_FROM_ID  = AND + DOCSSEND_FROM_ID + EQUAL + QUESTION;
    public final String SQL_DOCSSEND_CHECK_ADD_DOC_DATE = AND + DOCSSEND_DOCDATE + EQUAL + QUESTION;
    public final String SQL_DOCSSEND_CHECK_ADD_DOC_ID = AND + DOCSSEND_DOC_ID + DIFF + QUESTION;

    
    public final String SQL_DOCSSEND_CHECK_CODE_UPDATE = "SELECT DOCCODE  FROM DOCS_SEND WHERE DOC_ID IN(SELECT DOC_ID FROM DOCS_SEND WHERE DOC_ID<>?) AND DOCCODE=?";
    public final String SQL_DOCSSEND_WHERE=AND + TABLE_DOCSSEND+ STOP + DOCSSEND_USER_ID + EQUAL + QUESTION +   OR +  TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION+ OR + EXISTS +   OPEN +  SELECT + STAR + FROM + TABLE_DOC_OBSERVERS +  WHERE +  DOC_OBSERVERS_OBSERVER_ID + EQUAL + QUESTION +  AND +  DOC_OBSERVERS_WORKFLOW_ID+ EQUAL + QUESTION+ CLOSE;
    public final String SQL_SELECT_ALL_DT_DOCSSEND="SELECT A.*,B.FULLNAME FROM DOCS_SEND A LEFT JOIN USERS B ON A.USER_ID=B.USER_ID WHERE (A.USER_ID=? " + OR + "A."+  DOCSSEND_DOC_ID + IN + OPEN + SELECT + DOC_TRAILER_SEND_DOC_ID + FROM + TABLE_DOC_TRAILER_SEND + WHERE + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION + CLOSE + OR + EXISTS + OPEN +SELECT + STAR + FROM + TABLE_DOC_OBSERVERS +  WHERE + DOC_OBSERVERS_OBSERVER_ID + EQUAL + QUESTION + AND + DOC_OBSERVERS_WORKFLOW_ID + EQUAL + QUESTION + CLOSE + CLOSE + AND +"A."+DOCSSEND_DOCCODE + EQUAL + "'" + "'";
    public final String SQL_DOCSSEND_ADD_NEW = INSERT_INTO + TABLE_DOCSSEND + FIELDS(DOCSSEND_ALL_FIELDS,true) + VALUES(DOCSSEND_ALL_FIELDS.length);
    public final String SQL_DOCSSEND_UPDATE = UPDATE + TABLE_DOCSSEND+ SET + SETS(DOCSSEND_ALL_FIELDS_UPDATE) + WHERE + DOCSSEND_DOC_ID + EQUAL + QUESTION;
    public final String SQL_SELECT_DOC_TRAILER_RECV_BY_DOC_ID = SELECT + TABLE_DOC_TRAILER_RECV + STOP + STAR + COMMA + TABLE_USERS + STOP + USERS_FULLNAME + FROM + TABLE_DOC_TRAILER_RECV + LEFT_OUTER_JOIN + TABLE_USERS + ON + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERSEND_ID + EQUAL + TABLE_USERS + STOP + USERS_USER_ID + WHERE + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION  +  " # "  + ORDER_BY + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_TIMESEND + DESC;
    public final String SQL_SELECT_DOC_TRAILER_SEND_BY_DOC_ID = SELECT + TABLE_DOC_TRAILER_SEND + STOP + STAR + COMMA + TABLE_USERS + STOP + USERS_FULLNAME + FROM + TABLE_DOC_TRAILER_SEND + LEFT_OUTER_JOIN + TABLE_USERS + ON + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERSEND_ID + EQUAL + TABLE_USERS + STOP + USERS_USER_ID  + WHERE + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION +  " # " + ORDER_BY + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_TIMESEND + DESC;
    public final String SQL_SELECT_DOC_TRAILER_SEND_ADDWHERE = AND + OPEN + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERSEND_ID + EQUAL + QUESTION + OR + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION + CLOSE ;
    public final String SQL_SELECT_DOC_TRAILER_RECV_ADDWHERE = AND + OPEN + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERSEND_ID + EQUAL + QUESTION + OR + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION + CLOSE ;
    public final String SQL_SELECT_BY_DOC_ID_DOC_TRAILER_SEND_CHECK=SELECT +STAR + FROM + TABLE_DOC_TRAILER_SEND + WHERE + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION;
    public final String SQL_SELECT_BY_DOC_ID_DOC_TRAILER_RECV_CHECK=SELECT +STAR + FROM + TABLE_DOC_TRAILER_RECV + WHERE + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION;
    public final String SQL_DOCSSEND_BLOCK_FILE_UPDATE = UPDATE + TABLE_FILESSEND+ SET + FILESRECV_FILE_ID_BLOCK + EQUAL + QUESTION + WHERE + FILESRECV_DOC_ID + EQUAL + QUESTION;
    public final String SQL_SELECT_DOC_TRAILER_RECV_MOVE="SELECT DOC_TRAILER_RECV.*,A.FULLNAME AS USERSEND,B.FULLNAME AS USERRECV,C.NAME FROM DOC_TRAILER_RECV LEFT JOIN STATUS C ON DOC_TRAILER_RECV.DOCSTATUS=C.STATUS_ID LEFT JOIN USERS A ON DOC_TRAILER_RECV.USERSEND_ID=A.USER_ID LEFT JOIN USERS B ON DOC_TRAILER_RECV.USERRECV_ID=B.USER_ID WHERE DOC_TRAILER_RECV.DOC_ID=?  AND  ( DOC_TRAILER_RECV.USERSEND_ID=? OR DOC_TRAILER_RECV.USERRECV_ID=? OR  EXISTS ( SELECT * FROM DOC_OBSERVERS WHERE OBSERVER_ID=? AND WORKFLOW_ID=?) or exists (select * from doc_rules left join doc_boss on doc_boss.rule_id=doc_rules.rule_id where doc_rules.workflow_id=? and doc_rules.review=1 and doc_boss.user_id=?)) ORDER BY DOC_TRAILER_RECV.TIMESEND,DOC_TRAILER_RECV.USERSEND_ID";
    public final String SQL_SELECT_DOC_TRAILER_SEND_MOVE="SELECT DOC_TRAILER_SEND.*,A.FULLNAME AS USERSEND,B.FULLNAME AS USERRECV,C.NAME FROM DOC_TRAILER_SEND LEFT JOIN STATUS C ON DOC_TRAILER_SEND.DOCSTATUS=C.STATUS_ID  LEFT JOIN USERS A ON DOC_TRAILER_SEND.USERSEND_ID=A.USER_ID LEFT JOIN USERS B ON DOC_TRAILER_SEND.USERRECV_ID=B.USER_ID WHERE DOC_TRAILER_SEND.DOC_ID=?  AND  (DOC_TRAILER_SEND.USERSEND_ID=? OR DOC_TRAILER_SEND.USERRECV_ID=? OR  EXISTS ( SELECT * FROM DOC_OBSERVERS WHERE OBSERVER_ID=? AND WORKFLOW_ID=?) or exists (select * from doc_rules left join doc_boss on doc_boss.rule_id=doc_rules.rule_id where doc_rules.workflow_id=? and doc_rules.review=1 and doc_boss.user_id=?))  ORDER BY DOC_TRAILER_SEND.TIMESEND,DOC_TRAILER_SEND.USERSEND_ID";
    
    public final String SQL_SELECT_DOC_TRAILER_RECV_MOVE_PRIVATE="SELECT DOC_TRAILER_RECV.*,A.FULLNAME AS USERSEND,B.FULLNAME AS USERRECV,C.NAME FROM DOC_TRAILER_RECV LEFT JOIN STATUS C ON DOC_TRAILER_RECV.DOCSTATUS=C.STATUS_ID LEFT JOIN USERS A ON DOC_TRAILER_RECV.USERSEND_ID=A.USER_ID LEFT JOIN USERS B ON DOC_TRAILER_RECV.USERRECV_ID=B.USER_ID WHERE DOC_TRAILER_RECV.DOC_ID=?  AND  ( DOC_TRAILER_RECV.USERSEND_ID=? OR DOC_TRAILER_RECV.USERRECV_ID=? OR  EXISTS ( SELECT * FROM DOC_OBSERVERS WHERE OBSERVER_ID=? AND WORKFLOW_ID=?)) ORDER BY DOC_TRAILER_RECV.TIMESEND,DOC_TRAILER_RECV.USERSEND_ID";    
    //public final String SQL_SELECT_DOC_TRAILER_RECV_MOVE_PUBLIC= "SELECT DOC_TRAILER_RECV.*,A.FULLNAME AS USERSEND,B.FULLNAME AS USERRECV,C.NAME FROM DOC_TRAILER_RECV LEFT JOIN STATUS C ON DOC_TRAILER_RECV.DOCSTATUS=C.STATUS_ID LEFT JOIN USERS A ON DOC_TRAILER_RECV.USERSEND_ID=A.USER_ID LEFT JOIN USERS B ON DOC_TRAILER_RECV.USERRECV_ID=B.USER_ID WHERE DOC_TRAILER_RECV.DOC_ID=?  or  (  EXISTS ( SELECT * FROM DOC_OBSERVERS WHERE OBSERVER_ID=? AND WORKFLOW_ID=?) ) ORDER BY DOC_TRAILER_RECV.TIMESEND,DOC_TRAILER_RECV.USERSEND_ID";
    public final String SQL_SELECT_DOC_TRAILER_RECV_MOVE_PUBLIC= "SELECT DOC_TRAILER_RECV.*,A.FULLNAME AS USERSEND,B.FULLNAME AS USERRECV,C.NAME FROM DOC_TRAILER_RECV LEFT JOIN STATUS C ON DOC_TRAILER_RECV.DOCSTATUS=C.STATUS_ID LEFT JOIN USERS A ON DOC_TRAILER_RECV.USERSEND_ID=A.USER_ID LEFT JOIN USERS B ON DOC_TRAILER_RECV.USERRECV_ID=B.USER_ID WHERE DOC_TRAILER_RECV.DOC_ID=? ORDER BY DOC_TRAILER_RECV.TIMESEND,DOC_TRAILER_RECV.USERSEND_ID";
    
    public final String SQL_SELECT_DOC_TRAILER_SEND_MOVE_PRIVATE="SELECT DOC_TRAILER_SEND.*,A.FULLNAME AS USERSEND,B.FULLNAME AS USERRECV,C.NAME FROM DOC_TRAILER_SEND LEFT JOIN STATUS C ON DOC_TRAILER_SEND.DOCSTATUS=C.STATUS_ID  LEFT JOIN USERS A ON DOC_TRAILER_SEND.USERSEND_ID=A.USER_ID LEFT JOIN USERS B ON DOC_TRAILER_SEND.USERRECV_ID=B.USER_ID WHERE DOC_TRAILER_SEND.DOC_ID=?  AND  (DOC_TRAILER_SEND.USERSEND_ID=? OR DOC_TRAILER_SEND.USERRECV_ID=? OR  EXISTS ( SELECT * FROM DOC_OBSERVERS WHERE OBSERVER_ID=? AND WORKFLOW_ID=?))  ORDER BY DOC_TRAILER_SEND.TIMESEND,DOC_TRAILER_SEND.USERSEND_ID";
    public final String SQL_SELECT_DOC_TRAILER_SEND_MOVE_PUBLIC="SELECT DOC_TRAILER_SEND.*,A.FULLNAME AS USERSEND,B.FULLNAME AS USERRECV,C.NAME FROM DOC_TRAILER_SEND LEFT JOIN STATUS C ON DOC_TRAILER_SEND.DOCSTATUS=C.STATUS_ID  LEFT JOIN USERS A ON DOC_TRAILER_SEND.USERSEND_ID=A.USER_ID LEFT JOIN USERS B ON DOC_TRAILER_SEND.USERRECV_ID=B.USER_ID WHERE DOC_TRAILER_SEND.DOC_ID=?  ORDER BY DOC_TRAILER_SEND.TIMESEND,DOC_TRAILER_SEND.USERSEND_ID";
    
    
    public final String SQL_SELECT_FILESEND_BY_ID=SELECT + STAR + FROM + TABLE_FILESSEND + WHERE + FILESSEND_ID + EQUAL + QUESTION;
    public final String SQL_SELECT_FILESEND_MAX_BY_DOC_ID="SELECT * FROM FILESSEND WHERE FILE_ID=(SELECT max(file_id)FROM FILESSEND WHERE DOC_ID=?)";
    public final String SQL_SELECT_FRILESEND_MAX_VERSION_BY_DOC="SELECT * FROM FILESSEND WHERE FILE_ID=(SELECT max(file_id)FROM FILESSEND WHERE DOC_ID=? and REALNAME=?)";
    public final String SQL_FILESSEND_ADD_NEW = INSERT_INTO + TABLE_FILESSEND+ FIELDS(FILESSEND_ALL_FIELDS,true) + VALUES(FILESSEND_ALL_FIELDS.length);
    public final String SQL_SELECT_DOCSSEND_COUNT_OF_YEAR=SELECT + COUNT + OPEN + DOCSSEND_DOC_ID + CLOSE + FROM + TABLE_DOCSSEND + WHERE + DOCSSEND_TIMECREATE + ">" + QUESTION + AND + DOCSSEND_TIMECREATE + "<=" + QUESTION;
    public final String SQL_UPDATE_DOC_TRAILER_SEND_VIEW=UPDATE + TABLE_DOC_TRAILER_SEND +  SET +  DOC_TRAILER_SEND_VIEWS + EQUAL + QUESTION + COMMA  +  DOC_TRAILER_SEND_READED + EQUAL + 1 +  WHERE + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_VIEWS + EQUAL + 1;

    
    public final String SQL_CHECK_DEADLINE =  SELECT + COUNT + OPEN + TABLE_DOCSRECV + STOP + DOCSRECV_DOC_ID + CLOSE + FROM + TABLE_DOCSRECV + LEFT_JOIN + TABLE_DOC_TRAILER_RECV + ON + TABLE_DOCSRECV + STOP + DOCSRECV_DOC_ID + EQUAL + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_DOC_ID + WHERE + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERRECV_ID + DIFF + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERSEND_ID + AND + TABLE_DOCSRECV + STOP + DOCSRECV_STATUS_ID + NOT + IN + OPEN + IConstants.STATUS_NOT_CHECKED + CLOSE + AND + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSRECV_DEADLINE + "<=" + QUESTION;

    
    public final String SQL_FILESSEND_ADD_NEW_FILEONLINE = INSERT_INTO + TABLE_FILESSEND+ FIELDS(FILESSEND_ALL_FIELDS,true) + SELECT + QUESTION + COMMA + QUESTION + COMMA + QUESTION + COMMA + QUESTION + COMMA + QUESTION + COMMA + QUESTION + COMMA + QUESTION + COMMA + COUNT(FILESSEND_ID) + "+" + 1 + COMMA + QUESTION + COMMA + QUESTION + COMMA + QUESTION + FROM + TABLE_FILESSEND + WHERE + FILESSEND_NAME + EQUAL + QUESTION + AND + FILESSEND_DOC_ID + EQUAL + QUESTION;
    
    public final String SQL_FILESSEND_UPDATE = UPDATE + TABLE_FILESSEND+ SET + SETS(FILESSEND_ALL_FIELDS) + WHERE + FILESSEND_ID + EQUAL + QUESTION;
    public final String SQL_SELECT_FILESSEND_BY_ID=SELECT + TABLE_FILESSEND + STOP + STAR + COMMA + TABLE_USERS + STOP + USERS_FULLNAME + FROM + TABLE_FILESSEND + LEFT_JOIN + TABLE_USERS + ON + TABLE_FILESSEND + STOP + FILESSEND_USER_ID + EQUAL + TABLE_USERS + STOP + USERS_USER_ID + WHERE + FILESSEND_DOC_ID + EQUAL + QUESTION ;
    
    
    public final String SQL_SELECT_FILESSEND_BY_ID_ORTHER ="SELECT FILESSEND.*,USERS.FULLNAME FROM FILESSEND LEFT JOIN USERS ON FILESSEND.USER_ID=USERS.USER_ID WHERE FILESSEND.DOC_ID=? ORDER BY  FILESSEND.REALNAME , FILESSEND.FILE_ID  DESC";
    public final String SQL_SELECT_FILES_EQUALS_NAME_BY_ID=SELECT + TABLE_FILESSEND + STOP + STAR + COMMA + TABLE_USERS + STOP + USERS_FULLNAME + FROM + TABLE_FILESSEND + LEFT_JOIN + TABLE_USERS + ON + TABLE_FILESSEND + STOP + FILESSEND_USER_ID + EQUAL + TABLE_USERS + STOP + USERS_USER_ID + WHERE + FILESSEND_DOC_ID + EQUAL + QUESTION + AND + FILESSEND_NAME  + EQUAL + OPEN + SELECT + FILESSEND_NAME + FROM + TABLE_FILESSEND + WHERE + FILESSEND_ID + EQUAL + QUESTION + AND + FILESSEND_DOC_ID + EQUAL + QUESTION + CLOSE + ORDER_BY + FILESSEND_ID + DESC ;
    
    public final String SQL_DOCSSEND_ADD_NEW_REFERENCE = INSERT_INTO + TABLE_DOC_REFERENCE + FIELDS(DOC_REFERENCE_ALL_FIELDS,true) + OPEN + SELECT + QUESTION + COMMA + QUESTION + COMMA + QUESTION + COMMA +  DOCSRECV_DOC_ID + FROM + TABLE_DOCSRECV + WHERE + DOCSRECV_DOC_ID + IN + OPEN + "#" + CLOSE  + AND + DOCSRECV_DOC_ID + NOT + IN + OPEN + SELECT + DOC_REFERENCE_DOC_REFERENCE_ID + FROM + TABLE_DOC_REFERENCE + WHERE + DOC_REFERENCE_DOC_ID + EQUAL + QUESTION + CLOSE + CLOSE;
    public final String SQL_DOCSSEND_UPDATE_REFERENCE_NEW  = UPDATE + TABLE_DOC_REFERENCE + SET + DOC_REFERENCE_DOC_ID + EQUAL + OPEN + SELECT + MAX(DOCSSEND_DOC_ID) + FROM + TABLE_DOCSSEND + CLOSE + WHERE + DOC_REFERENCE_DOC_REFERENCE_ID + IN + OPEN + "#" + CLOSE + AND + DOC_REFERENCE_DOC_ID + EQUAL + -1;
    public final String SQL_DOCSSEND_UPDATE_REFERENCE_EDIT  = UPDATE + TABLE_DOC_REFERENCE + SET + DOC_REFERENCE_DOC_ID + EQUAL + QUESTION +  WHERE + DOC_REFERENCE_DOC_REFERENCE_ID + IN + OPEN + "#" + CLOSE + AND + DOC_REFERENCE_DOC_ID + EQUAL + -1 + AND + DOC_REFERENCE_DOC_REFERENCE_ID + NOT + IN + OPEN + SELECT + DOC_REFERENCE_DOC_REFERENCE_ID + FROM + TABLE_DOC_REFERENCE + WHERE + DOC_REFERENCE_DOC_ID + EQUAL + QUESTION + CLOSE;


   
    public final String SQL_TABLE_ALL_DOCSSEND=" SELECT DOCS_SEND.DOC_ID,USERS.FULLNAME,DOCS_SEND.LOCALCODE,DOCS_SEND.LOCALDATE,DOCS_SEND.DOCCODE,DOCS_SEND.ABSTRACT, " + 
    "DOCS_SEND.DOCDATE,DOCS_SEND.DEADLINE,DOCS_SEND.USER_ID,DOCS_SEND.SIGNER " + 
    ",DOC_TRAILER_SEND.TIMESEND,STATUS.NAME AS NAME_STATUS,DOCS_SEND.STATUS_ID AS STATUS_ID,DOC_TRAILER_SEND.READED  " + 
    ",STATUS.COLOR,DOC_TRAILER_SEND.FORYOU_ID,DOCS_SEND.DOSSIERS_ID,DOC_TRAILER_SEND.VIEWS,EXPRESS.EXPRESS_COLOR,DOCTYPE.NAME AS  DOCTYPENAME,CLASSIFY.NAME AS  CLASSIFY_NAME " + 
    "FROM DOCS_SEND  " + 
    "LEFT JOIN DOC_TRAILER_SEND ON DOC_TRAILER_SEND.DOC_ID=DOCS_SEND.DOC_ID  " + 
    "LEFT JOIN USERS ON DOC_TRAILER_SEND.USERSEND_ID=USERS.USER_ID  " + 
    "LEFT JOIN STATUS ON STATUS.STATUS_ID=DOCS_SEND.STATUS_ID  " +  
    "LEFT JOIN DOCTYPE ON DOCTYPE.DOCTYPE_ID=DOCS_SEND.DOCTYPE_ID  " +    
    "LEFT JOIN CLASSIFY ON DOCS_SEND.CLASSIFY_ID=CLASSIFY.CLASSIFY_ID  " +    
    "LEFT JOIN EXPRESS ON EXPRESS.EXPRESS_ID=DOCS_SEND.EXPRESS_ID ";
    
   
    public final String SQL_TABLE_ALL_DOCSSEND_OBSERVER=" SELECT DOCS_SEND.DOC_ID,DOCS_SEND.DOCCODE,DOCS_SEND.LOCALDATE,DOCS_SEND.LOCALCODE,DOCS_SEND.TIMECREATE AS TIMESEND,DOCS_SEND.USER_ID,DOCS_SEND.ABSTRACT,DOCS_SEND.DOCDATE,DOCS_SEND.SIGNER,STATUS.NAME AS NAME_STATUS,STATUS.COLOR,1 AS READED,0 AS FORYOU_ID,1 AS VIEWS,EXPRESS.EXPRESS_COLOR,DOCS_SEND.STATUS_ID,CLASSIFY.NAME AS  CLASSIFY_NAME FROM DOCS_SEND LEFT JOIN USERS ON DOCS_SEND.USER_ID=USERS.USER_ID LEFT JOIN CLASSIFY ON DOCS_SEND.CLASSIFY_ID=CLASSIFY.CLASSIFY_ID LEFT JOIN STATUS ON STATUS.STATUS_ID=DOCS_SEND.STATUS_ID LEFT JOIN DOSSIERS ON DOSSIERS.ID=DOCS_SEND.DOSSIERS_ID LEFT JOIN EXPRESS ON EXPRESS.EXPRESS_ID=DOCS_SEND.EXPRESS_ID    ";
    public final String SQL_SEARCH_DOCSSEND_FIELDS= "USERS.FULLNAME,DOCS_SEND.DOC_ID,DOCS_SEND.LOCALCODE,DOCS_SEND.DOCCODE,DOCS_SEND.ABSTRACT,DOCS_SEND.DOCDATE,DOCS_SEND.DEADLINE,DOCS_SEND.USER_ID,DOCS_SEND.TIMECREATE AS TIMESEND,STATUS.NAME AS NAME_STATUS,STATUS.COLOR,1 AS READED,EXPRESS.EXPRESS_COLOR";
    public final String SQL_SEARCH_DOCSSEND="SELECT # FROM DOCS_SEND LEFT JOIN USERS ON DOCS_SEND.USER_ID=USERS.USER_ID LEFT JOIN STATUS ON STATUS.STATUS_ID=DOCS_SEND.STATUS_ID LEFT JOIN EXPRESS ON EXPRESS.EXPRESS_ID=DOCS_SEND.EXPRESS_ID ";
    public final String SQL_DOCSSEND_SEARCH="SELECT # FROM DOCS_SEND LEFT JOIN USERS ON DOCS_SEND.USER_ID=USERS.USER_ID LEFT JOIN STATUS ON STATUS.STATUS_ID=DOCS_SEND.STATUS_ID  ";
    public final String SQL_SELECT_ALL_DOCS_SEND=SELECT + STAR + FROM + TABLE_DOCSSEND + WHERE + TRUE;
    public final String SQL_SELECT_DOCSSEND_BY_ID_DETAIL="SELECT A.*,K.READED,K.VIEWS,B.FULLNAME,C.NAME AS NAME_FORM,D.NAME AS NAME_STATUS,E.NAME AS NAME_EXPRESS,F.NAME AS NAME_VIA,G.NAME AS NAME_DOCTYPE,I.NAME AS NAME_SECURE,(SELECT DOSSIERS.ID FROM DOC_DOSSIERS LEFT JOIN DOSSIERS ON DOSSIERS.ID=DOC_DOSSIERS.DOSSIERS_ID WHERE DOSSIERS.CREATOR=? AND DOC_DOSSIERS.DOC_ID=? AND DOC_DOSSIERS.WORKFLOW_ID=2 ) AS DOCS_DOSSIERS_ID, (SELECT DOSSIERS.NAME FROM DOC_DOSSIERS LEFT JOIN DOSSIERS ON DOSSIERS.ID=DOC_DOSSIERS.DOSSIERS_ID WHERE DOSSIERS.CREATOR=? AND DOC_DOSSIERS.DOC_ID=? AND DOC_DOSSIERS.WORKFLOW_ID=2 ) AS NAME_DOSSIERS FROM DOCS_SEND A  LEFT JOIN USERS B ON A.USER_ID=B.USER_ID LEFT JOIN FORM C ON A.FORM_ID=C.FORM_ID LEFT JOIN STATUS D ON A.STATUS_ID=D.STATUS_ID LEFT JOIN EXPRESS E ON A.EXPRESS_ID=E.EXPRESS_ID LEFT JOIN VIA F ON A.VIA_ID=F.VIA_ID LEFT JOIN DOCTYPE G ON A.DOCTYPE_ID=G.DOCTYPE_ID LEFT JOIN SECURE I ON A.SECURE_ID=I.SECURE_ID LEFT JOIN DOC_TRAILER_SEND K ON A.DOC_ID=K.DOC_ID WHERE A.DOC_ID=? AND K.USERRECV_ID=? ";
    public final String SQL_SELECT_DOCSSEND_BY_ID_DETAIL_OBSERVER="SELECT A.*,B.FULLNAME,C.NAME AS NAME_FORM,D.NAME AS NAME_STATUS,E.NAME AS NAME_EXPRESS,F.NAME AS NAME_VIA,G.NAME AS NAME_DOCTYPE,I.NAME AS NAME_SECURE,(SELECT DOSSIERS.ID FROM DOC_DOSSIERS LEFT JOIN DOSSIERS ON DOSSIERS.ID=DOC_DOSSIERS.DOSSIERS_ID WHERE DOSSIERS.CREATOR=? AND DOC_DOSSIERS.DOC_ID=? AND DOC_DOSSIERS.WORKFLOW_ID=2 ) AS DOCS_DOSSIERS_ID, (SELECT DOSSIERS.NAME FROM DOC_DOSSIERS LEFT JOIN DOSSIERS ON DOSSIERS.ID=DOC_DOSSIERS.DOSSIERS_ID WHERE DOSSIERS.CREATOR=? AND DOC_DOSSIERS.DOC_ID=? AND DOC_DOSSIERS.WORKFLOW_ID=2 ) AS NAME_DOSSIERS FROM DOCS_SEND A  LEFT JOIN USERS B ON A.USER_ID=B.USER_ID LEFT JOIN FORM C ON A.FORM_ID=C.FORM_ID LEFT JOIN STATUS D ON A.STATUS_ID=D.STATUS_ID LEFT JOIN EXPRESS E ON A.EXPRESS_ID=E.EXPRESS_ID LEFT JOIN VIA F ON A.VIA_ID=F.VIA_ID LEFT JOIN DOCTYPE G ON A.DOCTYPE_ID=G.DOCTYPE_ID LEFT JOIN SECURE I ON A.SECURE_ID=I.SECURE_ID LEFT JOIN DOC_TRAILER_SEND K ON A.DOC_ID=K.DOC_ID WHERE A.DOC_ID=? ";

    public final String SQL_SELECT_DOCSRECV_BY_ID_DETAIL="SELECT A.*,K.READED,K.VIEWS,B.FULLNAME,C.NAME AS NAME_FORM,D.NAME AS NAME_STATUS,E.NAME AS NAME_EXPRESS,F.NAME AS NAME_VIA,G.NAME AS NAME_DOCTYPE,I.NAME AS NAME_SECURE,(SELECT DOSSIERS.ID FROM DOC_DOSSIERS LEFT JOIN DOSSIERS ON DOSSIERS.ID=DOC_DOSSIERS.DOSSIERS_ID WHERE DOSSIERS.CREATOR=? AND DOC_DOSSIERS.DOC_ID=? AND DOC_DOSSIERS.WORKFLOW_ID=1 ) AS DOCS_DOSSIERS_ID, (SELECT DOSSIERS.NAME FROM DOC_DOSSIERS LEFT JOIN DOSSIERS ON DOSSIERS.ID=DOC_DOSSIERS.DOSSIERS_ID WHERE DOSSIERS.CREATOR=? AND DOC_DOSSIERS.DOC_ID=? AND DOC_DOSSIERS.WORKFLOW_ID=1 ) AS NAME_DOSSIERS FROM DOCS_RECV A  LEFT JOIN USERS B ON A.USER_ID=B.USER_ID LEFT JOIN FORM C ON A.FORM_ID=C.FORM_ID LEFT JOIN STATUS D ON A.STATUS_ID=D.STATUS_ID LEFT JOIN EXPRESS E ON A.EXPRESS_ID=E.EXPRESS_ID LEFT JOIN VIA F ON A.VIA_ID=F.VIA_ID LEFT JOIN DOCTYPE G ON A.DOCTYPE_ID=G.DOCTYPE_ID LEFT JOIN SECURE I ON A.SECURE_ID=I.SECURE_ID LEFT JOIN DOC_TRAILER_RECV K ON A.DOC_ID=K.DOC_ID WHERE A.DOC_ID=? AND K.USERRECV_ID=? "; 
    public final String SQL_SELECT_DOCSRECV_BY_ID_DETAIL_OBSERVER="SELECT A.*,B.FULLNAME,C.NAME AS NAME_FORM,D.NAME AS NAME_STATUS,E.NAME AS NAME_EXPRESS,F.NAME AS NAME_VIA,G.NAME AS NAME_DOCTYPE,I.NAME AS NAME_SECURE,(SELECT DOSSIERS.ID FROM DOC_DOSSIERS LEFT JOIN DOSSIERS ON DOSSIERS.ID=DOC_DOSSIERS.DOSSIERS_ID WHERE DOSSIERS.CREATOR=? AND DOC_DOSSIERS.DOC_ID=? AND DOC_DOSSIERS.WORKFLOW_ID=1 ) AS DOCS_DOSSIERS_ID, (SELECT DOSSIERS.NAME FROM DOC_DOSSIERS LEFT JOIN DOSSIERS ON DOSSIERS.ID=DOC_DOSSIERS.DOSSIERS_ID WHERE DOSSIERS.CREATOR=? AND DOC_DOSSIERS.DOC_ID=? AND DOC_DOSSIERS.WORKFLOW_ID=1 ) AS NAME_DOSSIERS FROM DOCS_RECV A  LEFT JOIN USERS B ON A.USER_ID=B.USER_ID LEFT JOIN FORM C ON A.FORM_ID=C.FORM_ID LEFT JOIN STATUS D ON A.STATUS_ID=D.STATUS_ID LEFT JOIN EXPRESS E ON A.EXPRESS_ID=E.EXPRESS_ID LEFT JOIN VIA F ON A.VIA_ID=F.VIA_ID LEFT JOIN DOCTYPE G ON A.DOCTYPE_ID=G.DOCTYPE_ID LEFT JOIN SECURE I ON A.SECURE_ID=I.SECURE_ID LEFT JOIN DOC_TRAILER_RECV K ON A.DOC_ID=K.DOC_ID WHERE A.DOC_ID=? "; 

    
    public final String SQL_SELECT_DOCSRECV_BY_DOSSIERS_LIST = SELECT +TABLE_DOC_DOSSIERS + STOP + DOC_DOSSIERS_DOC_ID + FROM + TABLE_DOSSIERS + LEFT_JOIN + TABLE_DOC_DOSSIERS + ON + TABLE_DOSSIERS + STOP + DOSSIERS_ID + EQUAL + TABLE_DOC_DOSSIERS + STOP + DOC_DOSSIERS_DOSSIERS_ID + WHERE  + TABLE_DOC_DOSSIERS + STOP + DOC_DOSSIERS_WORKFLOW_ID + EQUAL + QUESTION + AND + DOSSIERS_CREATOR + EQUAL + QUESTION;
    public final String SQL_SELECT_DOCSRECV_BY_DOSSIERS_ID="SELECT  DOCS_RECV.*,USERS.FULLNAME,STATUS.NAME AS NAME_STATUS,DOC_TRAILER_RECV.TIMESEND,DOC_TRAILER_RECV.FORYOU_ID FROM DOCS_RECV LEFT JOIN USERS ON DOCS_RECV.USER_ID=USERS.USER_ID  LEFT JOIN STATUS  ON DOCS_RECV.STATUS_ID=STATUS.STATUS_ID LEFT JOIN DOC_TRAILER_RECV ON  DOCS_RECV.DOC_ID = DOC_TRAILER_RECV.DOC_ID WHERE DOCS_RECV.DOC_ID IN( SELECT DOC_DOSSIERS.DOC_ID FROM DOC_DOSSIERS LEFT JOIN DOSSIERS ON DOC_DOSSIERS.DOSSIERS_ID=DOSSIERS.ID WHERE DOC_DOSSIERS.DOSSIERS_ID=? AND DOSSIERS.CREATOR=?) AND DOC_TRAILER_RECV.USERRECV_ID=?";
    public final String SQL_SELECT_DOCSSEND_BY_DOSSIERS_ID="SELECT  DOCS_SEND.*,USERS.FULLNAME,STATUS.NAME AS NAME_STATUS,DOC_TRAILER_SEND.TIMESEND,DOC_TRAILER_SEND.FORYOU_ID FROM DOCS_SEND LEFT JOIN USERS ON DOCS_SEND.USER_ID=USERS.USER_ID  LEFT JOIN STATUS  ON DOCS_SEND.STATUS_ID=STATUS.STATUS_ID LEFT JOIN DOC_TRAILER_SEND ON  DOCS_SEND.DOC_ID = DOC_TRAILER_SEND.DOC_ID WHERE DOCS_SEND.DOC_ID IN( SELECT DOC_DOSSIERS.DOC_ID FROM DOC_DOSSIERS LEFT JOIN DOSSIERS ON DOC_DOSSIERS.DOSSIERS_ID=DOSSIERS.ID WHERE DOC_DOSSIERS.DOSSIERS_ID=? AND DOSSIERS.CREATOR=?) AND DOC_TRAILER_SEND.USERRECV_ID=?";   
    public final String SQL_INSERT_DOC_TRAILER_SEND_FORYOU_ID = SELECT + DOC_TRAILER_SEND_FORYOU_ID + FROM + TABLE_DOC_TRAILER_SEND + WHERE + DOC_TRAILER_SEND_FORYOU_ID + DIFF + 0 + AND + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_FORYOU_ID + IN + OPEN + SELECT + FORYOU_ID + FROM + TABLE_FORYOU + WHERE + FORYOU_WORKFLOW_ID + EQUAL + QUESTION + AND + FORYOU_DATEFROM + "<=" + QUESTION  + AND + FORYOU_DATETO + ">=" + QUESTION + AND + FORYOU_STATUS + DIFF + 0 + AND + FORYOU_USER_ID_FROM + IN + OPEN + SELECT + DOC_TRAILER_SEND_USERRECV_ID + FROM + TABLE_DOC_TRAILER_SEND + WHERE + DOC_TRAILER_SEND_READED + EQUAL + 0 + AND + DOC_TRAILER_SEND_FORYOU_ID + EQUAL + 0 + AND + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERSEND_ID + EQUAL + QUESTION + CLOSE  + CLOSE;
    public final String SQL_INSERT_DOC_TRAILER_RECV_FORYOU_ID = SELECT + DOC_TRAILER_RECV_FORYOU_ID + FROM + TABLE_DOC_TRAILER_RECV + WHERE + DOC_TRAILER_RECV_FORYOU_ID + DIFF + 0 + AND + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_FORYOU_ID + IN + OPEN + SELECT + FORYOU_ID + FROM + TABLE_FORYOU + WHERE + FORYOU_WORKFLOW_ID + EQUAL + QUESTION + AND + FORYOU_DATEFROM + "<=" + QUESTION  + AND + FORYOU_DATETO + ">=" + QUESTION + AND + FORYOU_STATUS + DIFF + 0 + AND + FORYOU_USER_ID_FROM + IN + OPEN + SELECT + DOC_TRAILER_RECV_USERRECV_ID + FROM + TABLE_DOC_TRAILER_RECV + WHERE + DOC_TRAILER_RECV_READED + EQUAL + 0 + AND + DOC_TRAILER_RECV_FORYOU_ID + EQUAL + 0 + AND + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERSEND_ID + EQUAL + QUESTION + CLOSE  + CLOSE;
    public final String SQL_INSERT_DOC_TRAILER_RECV = INSERT_INTO + TABLE_DOC_TRAILER_RECV + FIELDS(DOC_TRAILER_RECV_ALL_FIELDS, true) +  OPEN + SELECT + QUESTION + COMMA + QUESTION + COMMA +  QUESTION + COMMA + QUESTION + COMMA + QUESTION + COMMA + QUESTION + COMMA +  QUESTION + COMMA + QUESTION + COMMA + "#" + CLOSE;        
    public final String SQL_INSERT_DOC_TRAILER_RECV_BY_DOC_ID = SELECT + DOC_TRAILER_RECV_USERRECV_ID + FROM + TABLE_DOC_TRAILER_RECV + WHERE + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION ;
    public final String SQL_INSERT_DOC_TRAILER_RECV_SELECT = INSERT_INTO + TABLE_DOC_TRAILER_RECV + FIELDS(DOC_TRAILER_RECV_ALL_FIELDS, true) +  VALUES(DOC_TRAILER_RECV_ALL_FIELDS.length);        
    public final String SQL_INSERT_DOC_TRALER_SEND = INSERT_INTO + TABLE_DOC_TRAILER_SEND + FIELDS(DOC_TRAILER_SEND_ALL_FIELDS, true) +   OPEN + SELECT + QUESTION + COMMA + QUESTION + COMMA +  QUESTION + COMMA + QUESTION + COMMA + QUESTION + COMMA + QUESTION  + COMMA + QUESTION + COMMA + QUESTION + COMMA +  "#" + CLOSE;     
    public final String SQL_SELECT_TRALER_RECV_FOR_ANWEAR = SELECT + DOC_TRAILER_RECV_USERSEND_ID + FROM + TABLE_DOC_TRAILER_RECV + WHERE  + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERRECV_ID + DIFF + DOC_TRAILER_RECV_USERSEND_ID;

    public final String SQL_INSERT_DOC_TRALER_SEND_SELECT = INSERT_INTO + TABLE_DOC_TRAILER_SEND + FIELDS(DOC_TRAILER_SEND_ALL_FIELDS, true) +   VALUES(DOC_TRAILER_SEND_ALL_FIELDS.length);     
    public final String SQL_INSERT_DOC_TRAILER_SEND_BY_DOC_ID = SELECT + DOC_TRAILER_SEND_USERRECV_ID + FROM + TABLE_DOC_TRAILER_SEND + WHERE + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION ;
    
    public final String SQL_CHECK_DOC_TRAILER_RECV_ADDBATCH=SELECT +  STAR +  FROM +  TABLE_DOC_TRAILER_RECV +  WHERE +  DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION +  AND +  DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION;
    public final String SQL_CHECK_DOC_TRAILER_SEND_ADDBATCH=SELECT +  STAR +  FROM +  TABLE_DOC_TRAILER_SEND +  WHERE +  DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION +  AND +  DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION;
    
    public final String SQL_INSERT_DOC_TRAILER_RECV_FORYOU = INSERT_INTO + TABLE_DOC_TRAILER_RECV + FIELDS(DOC_TRAILER_RECV_ALL_FIELDS, true) +  OPEN + SELECT + QUESTION + COMMA + FORYOU_USER_ID_FROM + COMMA +  QUESTION + COMMA + QUESTION + COMMA + FORYOU_ID + COMMA + QUESTION + COMMA +  QUESTION + COMMA + QUESTION + COMMA +  FORYOU_USER_ID_TO + FROM + TABLE_FORYOU + WHERE + FORYOU_WORKFLOW_ID + EQUAL + QUESTION + AND + FORYOU_DATEFROM + "<=" + QUESTION  + AND + FORYOU_DATETO + ">=" + QUESTION + AND + FORYOU_STATUS + DIFF + 0 + AND + FORYOU_USER_ID_FROM + IN + OPEN + SELECT + DOC_TRAILER_RECV_USERRECV_ID + FROM + TABLE_DOC_TRAILER_RECV + WHERE + DOC_TRAILER_RECV_READED + EQUAL + 0 + AND + DOC_TRAILER_RECV_FORYOU_ID + EQUAL + 0 + AND + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERSEND_ID + EQUAL + QUESTION + CLOSE  + AND + FORYOU_ID + NOT + IN + OPEN +  SQL_INSERT_DOC_TRAILER_RECV_FORYOU_ID + CLOSE + CLOSE;     
    public final String SQL_UPDATE_DOC_TRAILER_RECV_VIEWS = UPDATE + TABLE_DOC_TRAILER_RECV + SET + DOC_TRAILER_RECV_VIEWS + EQUAL + QUESTION + WHERE + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERSEND_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERRECV_ID + IN + OPEN + "#" + CLOSE;
    
    public final String SQL_INSERT_DOC_TRAILER_SEND_FORYOU = INSERT_INTO + TABLE_DOC_TRAILER_SEND + FIELDS(DOC_TRAILER_SEND_ALL_FIELDS, true) +  OPEN + SELECT + QUESTION + COMMA + FORYOU_USER_ID_FROM + COMMA +  QUESTION + COMMA + QUESTION + COMMA + FORYOU_ID + COMMA + QUESTION + COMMA + QUESTION + COMMA + QUESTION + COMMA + FORYOU_USER_ID_TO +  FROM + TABLE_FORYOU + WHERE + FORYOU_WORKFLOW_ID + EQUAL + QUESTION + AND + FORYOU_DATEFROM + "<=" + QUESTION  + AND + FORYOU_DATETO + ">=" + QUESTION + AND + FORYOU_STATUS + DIFF + 0 + AND + FORYOU_USER_ID_FROM + IN + OPEN + SELECT + DOC_TRAILER_SEND_USERRECV_ID + FROM + TABLE_DOC_TRAILER_SEND + WHERE + DOC_TRAILER_SEND_READED + EQUAL + 0 + AND + DOC_TRAILER_SEND_FORYOU_ID + EQUAL + 0 + AND + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERSEND_ID + EQUAL + QUESTION + CLOSE  + AND + FORYOU_ID + NOT + IN + OPEN + SQL_INSERT_DOC_TRAILER_SEND_FORYOU_ID + CLOSE + CLOSE;    
    public final String SQL_SELECT_ALL_USER_PRIO_RECV = TABLE_DOC_PRIORITIES + STOP + DOC_PRIORITIES_USER_ID + FROM + TABLE_DOC_RULES + LEFT_JOIN + TABLE_DOC_PRIORITIES + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_PRIORITIES + STOP + DOC_PRIORITIES_RULE_ID + LEFT_JOIN + TABLE_DOC_BOSS + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_BOSS + STOP + DOC_BOSS_RULE_ID + WHERE + TABLE_DOC_RULES + STOP + DOC_RULES_ACTIVE + DIFF + 0 +  AND  + TABLE_DOC_RULES + STOP + DOC_RULES_WORKFLOW_ID + EQUAL + QUESTION + AND + TABLE_DOC_BOSS + STOP + DOC_BOSS_USER_ID + EQUAL + QUESTION + AND + TABLE_DOC_PRIORITIES + STOP + DOC_PRIORITIES_USER_ID +  NOT + IN + OPEN +  SELECT + DOC_TRAILER_RECV_USERRECV_ID + FROM + TABLE_DOC_TRAILER_RECV + WHERE +  DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + CLOSE ;
    public final String SQL_SELECT_ALL_DEPARTMENT_BY_SEARCH =SELECT + STAR + FROM + TABLE_DEPARTMENTS + WHERE + TRUE;


    public final String SQL_SELECT_ALL_USER_PRIO_SEND = TABLE_DOC_PRIORITIES + STOP + DOC_PRIORITIES_USER_ID + FROM + TABLE_DOC_RULES + LEFT_JOIN + TABLE_DOC_PRIORITIES + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_PRIORITIES + STOP + DOC_PRIORITIES_RULE_ID + LEFT_JOIN + TABLE_DOC_BOSS + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_BOSS + STOP + DOC_BOSS_RULE_ID + WHERE + TABLE_DOC_RULES + STOP + DOC_RULES_ACTIVE + DIFF + 0 +  AND  + TABLE_DOC_RULES + STOP + DOC_RULES_WORKFLOW_ID + EQUAL + QUESTION + AND + TABLE_DOC_BOSS + STOP + DOC_BOSS_USER_ID + EQUAL + QUESTION + AND + TABLE_DOC_PRIORITIES + STOP + DOC_PRIORITIES_USER_ID +  NOT + IN + OPEN +  SELECT + DOC_TRAILER_SEND_USERRECV_ID + FROM + TABLE_DOC_TRAILER_SEND + WHERE +  DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + CLOSE ;
    public final String SQL_SELECT_ALL_USER_PRIO_ADD_BY_DEPARTMENT_ID_RECV = TABLE_USERS + STOP + USERS_USER_ID + FROM + TABLE_USERS + WHERE + TABLE_USERS + STOP + USERS_DEPARTMENT_ID + EQUAL + QUESTION + AND + TABLE_USERS + STOP + USERS_USER_ID + IN + OPEN + SELECT + SQL_SELECT_ALL_USER_PRIO_RECV + CLOSE;
    public final String SQL_SELECT_ALL_USER_PRIO_ADD_BY_DEPARTMENT_ID_SEND = TABLE_USERS + STOP + USERS_USER_ID + FROM + TABLE_USERS + WHERE + TABLE_USERS + STOP + USERS_DEPARTMENT_ID + EQUAL + QUESTION + AND + TABLE_USERS + STOP + USERS_USER_ID + IN + OPEN + SELECT + SQL_SELECT_ALL_USER_PRIO_SEND + CLOSE;
    public final String SQL_SELECT_USER_ID_BY_CREATE_RECV =  USERS_USER_ID + FROM + TABLE_USERS + WHERE + USERS_USER_ID + IN + OPEN + "#" + CLOSE + AND + USERS_USER_ID + NOT + IN + OPEN + SELECT + DOC_TRAILER_RECV_USERRECV_ID + FROM + TABLE_DOC_TRAILER_RECV + WHERE +  DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERSEND_ID + EQUAL + QUESTION + CLOSE;    
    public final String SQL_SELECT_USER_ID_BY_CREATE_SEND =  USERS_USER_ID + FROM + TABLE_USERS + WHERE + USERS_USER_ID + IN + OPEN + "#" + CLOSE + AND + USERS_USER_ID + NOT + IN + OPEN + SELECT + DOC_TRAILER_SEND_USERRECV_ID + FROM + TABLE_DOC_TRAILER_SEND + WHERE +  DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERSEND_ID + EQUAL + QUESTION + CLOSE;
    public final String SQL_SELECT_ALL_DOCSSEND_WHERE = AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOC_ID + IN + OPEN + SELECT + DISTINCT + OPEN + TABLE_DOC_TRAILER_SEND +  STOP + DOC_TRAILER_SEND_DOC_ID  + CLOSE + FROM + TABLE_DOC_TRAILER_SEND + WHERE + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERSEND_ID + EQUAL + QUESTION + CLOSE;
    public final String SQL_SELECT_ALL_DOCS_RECV_WHERE = AND + TABLE_DOCSRECV + STOP + DOCSRECV_DOC_ID + IN + OPEN + SELECT + DISTINCT + OPEN + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_DOC_ID + CLOSE + FROM + TABLE_DOC_TRAILER_RECV + WHERE + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERSEND_ID + EQUAL + QUESTION + CLOSE;
    public final String SQL_SELECT_ALL_USER_PRIO = SELECT + DISTINCT + OPEN + TABLE_DOC_PRIORITIES + STOP + DOC_PRIORITIES_USER_ID + CLOSE + FROM + TABLE_DOC_RULES + LEFT_JOIN + TABLE_DOC_PRIORITIES + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_PRIORITIES + STOP + DOC_PRIORITIES_RULE_ID + LEFT_JOIN + TABLE_DOC_BOSS + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_BOSS + STOP + DOC_BOSS_RULE_ID + WHERE + TABLE_DOC_RULES + STOP + DOC_RULES_ACTIVE + DIFF + 0 +  AND  + TABLE_DOC_RULES + STOP + DOC_RULES_WORKFLOW_ID + EQUAL + QUESTION + AND + TABLE_DOC_BOSS + STOP + DOC_BOSS_USER_ID + EQUAL + QUESTION ;
    public final String SQL_INSERT_DOC_REVIEW_RECV = INSERT_INTO + TABLE_DOC_REVIEW_RECV + FIELDS(DOC_REVIEW_RECV_ALL_FIELDS, true) +  VALUES(DOC_REVIEW_RECV_ALL_FIELDS.length);    
    public final String SQL_INSERT_DOC_REVIEW_SEND = INSERT_INTO + TABLE_DOC_REVIEW_SEND + FIELDS(DOC_REVIEW_SEND_ALL_FIELDS, true) +  VALUES(DOC_REVIEW_SEND_ALL_FIELDS.length);    
    public final String SQL_INSERT_DOC_REVIEW_RECV_FORYOU = INSERT_INTO + TABLE_DOC_REVIEW_RECV + FIELDS(DOC_REVIEW_RECV_ALL_FIELDS, true) + OPEN + SELECT + QUESTION + COMMA + DOC_TRAILER_RECV_USERSEND_ID + COMMA + QUESTION + COMMA + QUESTION + COMMA + QUESTION  + COMMA + QUESTION + COMMA + QUESTION + FROM + TABLE_DOC_TRAILER_RECV + WHERE  + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_FORYOU_ID + DIFF + 0 + AND + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION + CLOSE;    
    public final String SQL_INSERT_DOC_REVIEW_SEND_FORYOU = INSERT_INTO + TABLE_DOC_REVIEW_RECV + FIELDS(DOC_REVIEW_SEND_ALL_FIELDS, true) + OPEN + SELECT + QUESTION + COMMA + DOC_TRAILER_SEND_USERSEND_ID + COMMA + QUESTION + COMMA + QUESTION + COMMA + QUESTION  + COMMA + QUESTION + COMMA + QUESTION + COMMA + QUESTION + FROM + TABLE_DOC_TRAILER_SEND + WHERE  + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_FORYOU_ID + DIFF + 0 + AND + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION + CLOSE;    
    public final String SQL_UPDATE_DOC_RECV = UPDATE + TABLE_DOCSRECV + SET + DOCSRECV_STATUS_ID + EQUAL + QUESTION + WHERE + TABLE_DOCSRECV + STOP + DOCSRECV_DOC_ID + EQUAL + QUESTION;
    public final String SQL_UPDATE_DOC_SEND = UPDATE + TABLE_DOCSSEND + SET + DOCSSEND_STATUS_ID + EQUAL + QUESTION + WHERE + TABLE_DOCSSEND + STOP + DOCSSEND_DOC_ID + EQUAL + QUESTION;
    
    public final String SQL_UPDATE_DOC_SEND_READ_REVIEW = UPDATE + TABLE_DOC_TRAILER_SEND + SET + DOC_TRAILER_SEND_READED + EQUAL + 0 + WHERE + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERSEND_ID + EQUAL + DOC_TRAILER_SEND_USERRECV_ID ;
    
    public final String SQL_UPDATE_READED_FOR_PEOPLE_SEND= UPDATE + TABLE_DOC_TRAILER_SEND + SET + DOC_TRAILER_SEND_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + OPEN + SELECT + DOC_TRAILER_SEND_USERSEND_ID + FROM + TABLE_DOC_TRAILER_SEND + WHERE + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND  + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERRECV_ID + DIFF + DOC_TRAILER_SEND_USERSEND_ID + AND + DOC_TRAILER_SEND_VIEWS + EQUAL + 0 + CLOSE ;
    
    public final String SQL_USER_SEND_DOCSEND   =  SELECT + DOC_TRAILER_SEND_USERSEND_ID + FROM + TABLE_DOC_TRAILER_SEND + WHERE + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION ;

    public final String SQL_UPDATE_READED_SEND_FOR_PEOPLE_SEND_ME= UPDATE + TABLE_DOC_TRAILER_SEND + SET + DOC_TRAILER_SEND_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION  ;
    public final String SQL_UPDATE_READED_RECV_FOR_PEOPLE_SEND_ME= UPDATE + TABLE_DOC_TRAILER_RECV + SET + DOC_TRAILER_RECV_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION  ;
    
    
    public final String SQL_UPDATE_READED_ADD_ONE_WHEN_DOWNLOAD=UPDATE + TABLE_FILESSEND + SET + FILESSEND_NUMBER_READED_FILE + EQUAL + FILESSEND_NUMBER_READED_FILE + "+" + 1 + WHERE + FILESSEND_ID + EQUAL + QUESTION + AND + FILESSEND_USER_ID + DIFF + QUESTION ;
    public final String SQL_UPDATE_READED_FOR_PEOPLE_FORYOU= UPDATE + TABLE_DOC_TRAILER_SEND + SET + DOC_TRAILER_SEND_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + OPEN + SELECT + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERSEND_ID + FROM + TABLE_DOC_TRAILER_SEND + WHERE + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION + CLOSE ;
    public final String SQL_UPDATE_READED_RECV_FOR_PEOPLE_FORYOU= UPDATE + TABLE_DOC_TRAILER_RECV + SET + DOC_TRAILER_RECV_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + OPEN + SELECT + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERSEND_ID + FROM + TABLE_DOC_TRAILER_RECV + WHERE + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION + CLOSE ;
    
    public final String SQL_UPDATE_READED_FOR_PEOPLE_SEND_FOR_FORYOU= UPDATE + TABLE_DOC_TRAILER_SEND + SET + DOC_TRAILER_SEND_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERSEND_ID + EQUAL + OPEN  + SELECT + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERSEND_ID + FROM + TABLE_DOC_TRAILER_SEND + WHERE + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + OPEN + SELECT + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERSEND_ID + FROM + TABLE_DOC_TRAILER_SEND + WHERE + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION + CLOSE + CLOSE + AND + DOC_TRAILER_RECV_USERRECV_ID + DIFF + OPEN + SELECT + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERSEND_ID + FROM + TABLE_DOC_TRAILER_SEND + WHERE + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION + CLOSE;
    public final String SQL_UPDATE_READED_FOR_PEOPLE_SEND_CHECK_FOR_FORYOU= UPDATE + TABLE_DOC_TRAILER_SEND + SET + DOC_TRAILER_SEND_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + OPEN + SELECT + FORYOU_USER_ID_TO + FROM + TABLE_FORYOU + WHERE + FORYOU_WORKFLOW_ID + EQUAL + QUESTION + AND + FORYOU_STATUS + DIFF + 0 + AND + FORYOU_DATEFROM + "<=" + QUESTION + AND + FORYOU_DATETO + ">=" + QUESTION + AND + FORYOU_USER_ID_FROM + EQUAL + QUESTION + CLOSE;
    public final String SQL_UPDATE_READED_RECV_FOR_PEOPLE_SEND_CHECK_FOR_FORYOU= UPDATE + TABLE_DOC_TRAILER_RECV + SET + DOC_TRAILER_RECV_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + OPEN + SELECT + FORYOU_USER_ID_TO + FROM + TABLE_FORYOU + WHERE + FORYOU_WORKFLOW_ID + EQUAL + QUESTION + AND + FORYOU_STATUS + DIFF + 0 + AND + FORYOU_DATEFROM + "<=" + QUESTION + AND + FORYOU_DATETO + ">=" + QUESTION + AND + FORYOU_USER_ID_FROM + EQUAL + QUESTION + CLOSE;
    
    
     public final String SQL_UPDATE_READED_SEND_FOR_PEOPLE_FORYOU_RECV= UPDATE + TABLE_DOC_TRAILER_SEND + SET + DOC_TRAILER_SEND_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION ;
     public final String SQL_UPDATE_READED_SEND_FOR_FORYOU= UPDATE + TABLE_DOC_TRAILER_SEND + SET + DOC_TRAILER_SEND_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + OPEN + SELECT + FORYOU_USER_ID_FROM + FROM + TABLE_FORYOU + WHERE + FORYOU_ID + EQUAL + QUESTION + AND + FORYOU_STATUS + DIFF + 0 + AND + FORYOU_WORKFLOW_ID + EQUAL + AppConfigs.DOCSSEND_WORKFLOWID + CLOSE ;

    public final String SQL_UPDATE_READED_RECV_FOR_PEOPLE_FORYOU_RECV= UPDATE + TABLE_DOC_TRAILER_RECV + SET + DOC_TRAILER_RECV_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION ;
    public final String  SQL_UPDATE_READED_RECV_FOR_FORYOU= UPDATE + TABLE_DOC_TRAILER_RECV + SET + DOC_TRAILER_RECV_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + OPEN + SELECT + FORYOU_USER_ID_FROM + FROM + TABLE_FORYOU + WHERE + FORYOU_ID + EQUAL + QUESTION + AND + FORYOU_STATUS + DIFF + 0 + AND + FORYOU_WORKFLOW_ID + EQUAL + AppConfigs.DOCSRECV_WORKFLOWID + CLOSE ;
   



    public final String SQL_UPDATE_READED_FOR_PEOPLE_SEND_FORYOU= UPDATE + TABLE_DOC_TRAILER_SEND + SET + DOC_TRAILER_SEND_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + OPEN + SELECT + DOC_TRAILER_SEND_USERSEND_ID + FROM + TABLE_DOC_TRAILER_SEND + WHERE + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_FORYOU_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + CLOSE ;
    public final String SQL_UPDATE_READED_RECV_FOR_PEOPLE_SEND_FORYOU= UPDATE + TABLE_DOC_TRAILER_RECV + SET + DOC_TRAILER_RECV_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + OPEN + SELECT + DOC_TRAILER_RECV_USERSEND_ID + FROM + TABLE_DOC_TRAILER_RECV + WHERE + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_FORYOU_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + CLOSE ;
    
    public final String SQL_UPDATE_READED_FOR_PEOPLE_SEND_TO_FORYOU= UPDATE + TABLE_DOC_TRAILER_SEND + SET + DOC_TRAILER_SEND_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + OPEN  + SELECT + DOC_TRAILER_SEND_USERSEND_ID + FROM + TABLE_DOC_TRAILER_SEND + WHERE + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + OPEN + SELECT + DOC_TRAILER_SEND_USERSEND_ID + FROM + TABLE_DOC_TRAILER_SEND + WHERE + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_FORYOU_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION +  CLOSE +  CLOSE ;
    public final String SQL_UPDATE_READED_RECV_FOR_PEOPLE_SEND_TO_FORYOU_INDEX1= UPDATE + TABLE_DOC_TRAILER_RECV + SET + DOC_TRAILER_RECV_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_RECV_READED + DIFF + 0 + AND + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERRECV_ID + IN + OPEN  + SELECT + FORYOU_USER_ID_TO + FROM + TABLE_FORYOU + WHERE + FORYOU_WORKFLOW_ID + EQUAL + AppConfigs.DOCSRECV_WORKFLOWID + AND + FORYOU_STATUS + DIFF + 0 + AND + FORYOU_USER_ID_FROM + EQUAL + QUESTION + AND + FORYOU_DATEFROM + "<=" + QUESTION + AND + FORYOU_DATETO + ">" + QUESTION +  CLOSE ;
    public final String SQL_UPDATE_READED_RECV_FOR_PEOPLE_SEND_TO_FORYOU_INDEX2= UPDATE + TABLE_DOC_TRAILER_RECV + SET + DOC_TRAILER_RECV_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_RECV_READED + DIFF + 0 + AND + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERRECV_ID + IN + OPEN  + SELECT + FORYOU_USER_ID_TO + FROM + TABLE_FORYOU + WHERE + FORYOU_WORKFLOW_ID + EQUAL + AppConfigs.DOCSRECV_WORKFLOWID + AND + FORYOU_STATUS + DIFF + 0 + AND + FORYOU_USER_ID_FROM + IN + OPEN + "#" + CLOSE + AND + FORYOU_DATEFROM + "<=" + QUESTION + AND + FORYOU_DATETO + ">" + QUESTION + CLOSE ; 
    
    public final String SQL_UPDATE_READED_SEND_FOR_PEOPLE_SEND_TO_FORYOU_INDEX2= UPDATE + TABLE_DOC_TRAILER_SEND + SET + DOC_TRAILER_SEND_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_SEND_READED + DIFF + 0 + AND + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERRECV_ID + IN + OPEN  + SELECT + FORYOU_USER_ID_TO + FROM + TABLE_FORYOU + WHERE + FORYOU_WORKFLOW_ID + EQUAL + AppConfigs.DOCSSEND_WORKFLOWID + AND + FORYOU_STATUS + DIFF + 0 + AND + FORYOU_USER_ID_FROM + IN + OPEN + "#" + CLOSE + AND + FORYOU_DATEFROM + "<=" + QUESTION + AND + FORYOU_DATETO + ">" + QUESTION + CLOSE ;
    public final String SQL_UPDATE_READED_SEND_FOR_PEOPLE_SEND_TO_FORYOU_INDEX1= UPDATE + TABLE_DOC_TRAILER_SEND + SET + DOC_TRAILER_SEND_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_SEND_READED + DIFF + 0 + AND + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERRECV_ID + IN + OPEN  + SELECT + FORYOU_USER_ID_TO + FROM + TABLE_FORYOU + WHERE + FORYOU_WORKFLOW_ID + EQUAL + AppConfigs.DOCSSEND_WORKFLOWID + AND + FORYOU_STATUS + DIFF + 0 + AND + FORYOU_USER_ID_FROM + EQUAL + QUESTION + AND + FORYOU_DATEFROM + "<=" + QUESTION + AND + FORYOU_DATETO + ">" + QUESTION + CLOSE ;
    public final String SQL_SELECT_ALL_USER_PRIO_SEND_USER_RECV = SELECT + TABLE_DOC_PRIORITIES + STOP + DOC_PRIORITIES_USER_ID + FROM + TABLE_DOC_RULES + LEFT_JOIN + TABLE_DOC_PRIORITIES + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_PRIORITIES + STOP + DOC_PRIORITIES_RULE_ID + LEFT_JOIN + TABLE_DOC_BOSS + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_BOSS + STOP + DOC_BOSS_RULE_ID + WHERE + TABLE_DOC_RULES + STOP + DOC_RULES_ACTIVE + DIFF + 0 +  AND  + TABLE_DOC_RULES + STOP + DOC_RULES_WORKFLOW_ID + EQUAL + QUESTION + AND + TABLE_DOC_BOSS + STOP + DOC_BOSS_USER_ID + EQUAL + QUESTION;
    public final String SQL_SELECT_ALL_USER_PRIO_ADD_BY_DEPARTMENT_ID_SEND_USER_RECV =SELECT + TABLE_USERS + STOP + USERS_USER_ID + FROM + TABLE_USERS + WHERE + TABLE_USERS + STOP + USERS_DEPARTMENT_ID + EQUAL + QUESTION + AND + TABLE_USERS + STOP + USERS_USER_ID + IN + OPEN + SQL_SELECT_ALL_USER_PRIO_SEND_USER_RECV + CLOSE;
    
    public final String SQL_UPDATE_READED_FOR_PEOPLE_RECV_ED=UPDATE + TABLE_DOC_TRAILER_SEND + SET + DOC_TRAILER_SEND_READED + EQUAL + 0 + WHERE + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_SEND_USERSEND_ID + EQUAL + QUESTION +  AND + DOC_TRAILER_SEND_USERSEND_ID + DIFF + DOC_TRAILER_SEND_USERRECV_ID + AND + DOC_TRAILER_SEND_VIEWS + EQUAL + 0 ;
    
    
    public final String SQL_UPDATE_READED_FOR_PEOPLE_RECV=UPDATE + TABLE_DOC_TRAILER_SEND + SET + DOC_TRAILER_SEND_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERRECV_ID + IN + OPEN + "#" + CLOSE;
    
    public final String SQL_UPDATE_READED_RECV_FOR_PEOPLE_RECV=UPDATE + TABLE_DOC_TRAILER_RECV + SET + DOC_TRAILER_RECV_READED + EQUAL + QUESTION + WHERE + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERRECV_ID + IN + OPEN + "#" + CLOSE;
        
    public final String SQL_SELECT_PEOPLE_PRIORITIES=SELECT +  TABLE_DOC_PRIORITIES + STOP + DOC_PRIORITIES_USER_ID +  FROM +  TABLE_DOC_RULES +  LEFT_JOIN +   TABLE_DOC_PRIORITIES +  ON +  TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_PRIORITIES + STOP + DOC_PRIORITIES_RULE_ID +  LEFT_JOIN +  TABLE_DOC_BOSS +  ON +  TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_BOSS + STOP + DOC_BOSS_RULE_ID + WHERE + TABLE_DOC_RULES + STOP + DOC_RULES_ACTIVE + DIFF + 0 +  AND +  TABLE_DOC_RULES + STOP + DOC_RULES_WORKFLOW_ID + EQUAL + QUESTION + AND + TABLE_DOC_BOSS + STOP + DOC_BOSS_USER_ID + EQUAL + QUESTION ;
    //AND + OPEN  +  DOC_TRAILER_SEND_USERSEND_ID + EQUAL + QUESTION + OR  +  DOC_TRAILER_SEND_USERRECV_ID + " in (select usersend_id from DOC_TRAILER_SEND where DOC_ID=? and  USERRECV_ID=? )" + CLOSE + AND + DOC_TRAILER_SEND_USERRECV_ID + DIFF + QUESTION;
    
     public final String SQL_SELECT_USER_FROM_FORYOU = SELECT + STAR + FROM + TABLE_FORYOU + WHERE + FORYOU_ID + EQUAL + QUESTION + AND + FORYOU_DATEFROM + "<=" + QUESTION + AND + FORYOU_DATETO + ">=" + QUESTION;    
    public final String SQL_UPDATE_DOC_RECV_READ_REVIEW = UPDATE + TABLE_DOC_TRAILER_RECV + SET + DOC_TRAILER_RECV_READED + EQUAL + 0 + WHERE + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + OPEN  +  DOC_TRAILER_RECV_USERSEND_ID + EQUAL + QUESTION + OR  +  DOC_TRAILER_RECV_USERRECV_ID + " in (select usersend_id from DOC_TRAILER_RECV where DOC_ID=? and  USERRECV_ID=? )" + CLOSE + AND + DOC_TRAILER_RECV_USERRECV_ID + DIFF + QUESTION;
    public final String SQL_INSERT_DOC_REVIEW_FILE_RECV = INSERT_INTO + TABLE_DOC_FILE_REVIEW_RECV + FIELDS(DOC_FILE_REVIEW_RECV_ALL_FIELDS, true) +  VALUES(DOC_FILE_REVIEW_RECV_ALL_FIELDS.length);    
    public final String SQL_INSERT_DOC_REVIEW_FILE_SEND = INSERT_INTO + TABLE_DOC_FILES_SEND_REVIEW + FIELDS(DOC_FILES_SEND_REVIEW_ALL_FIELDS, true) +  VALUES(DOC_FILES_SEND_REVIEW_ALL_FIELDS.length);    
    public final String SQL_SELECT_ALL_DOC_REVIEW_RECV_MAX_ID = SELECT + MAX(DOC_REVIEW_RECV_REVIEW_ID) + FROM + TABLE_DOC_REVIEW_RECV + WHERE + TABLE_DOC_REVIEW_RECV + STOP +DOC_REVIEW_RECV_CREATOR + EQUAL + QUESTION;    
    public final String SQL_SELECT_ALL_DOC_REVIEW_SEND_MAX_ID = SELECT +MAX(DOC_REVIEW_SEND_REVIEW_ID) + FROM + TABLE_DOC_REVIEW_SEND + WHERE + TABLE_DOC_REVIEW_SEND + STOP +DOC_REVIEW_SEND_CREATOR + EQUAL + QUESTION;      
    public final String SQL_SELECT_ALL_DOC_REVIEW_RECV_BY_DOC_ID = SELECT + TABLE_DOC_REVIEW_RECV + STOP + STAR + COMMA + TABLE_DOC_FILE_REVIEW_RECV + STOP + STAR + COMMA + TABLE_USERS + STOP + USERS_FULLNAME + FROM + TABLE_DOC_REVIEW_RECV + LEFT_JOIN + TABLE_DOC_FILE_REVIEW_RECV + ON + TABLE_DOC_REVIEW_RECV + STOP + DOC_REVIEW_RECV_REVIEW_ID + EQUAL + TABLE_DOC_FILE_REVIEW_RECV + STOP + DOC_FILE_REVIEW_RECV_REVIEW_ID + LEFT_JOIN + TABLE_USERS + ON + TABLE_DOC_REVIEW_RECV + STOP + DOC_REVIEW_RECV_CREATOR + EQUAL + TABLE_USERS + STOP + USERS_USER_ID + WHERE + "FORYOU_CREATOR<>? AND DOC_REVIEW_RECV.DOC_ID=? AND ((DOC_REVIEW_RECV.CREATOR=? OR DOC_REVIEW_RECV.CREATOR IN ((SELECT USERSEND_ID FROM doc_trailer_recv WHERE doc_id=? AND (USERRECV_ID=? OR userrecv_id in (select usersend_id from doc_trailer_recv where foryou_id>0 and doc_id=? and userrecv_id=?)))  UNION ( SELECT USERRECV_ID FROM doc_trailer_recv WHERE doc_id=? AND USERSEND_ID=? ))) OR  EXISTS  ( SELECT * FROM DOC_OBSERVERS WHERE OBSERVER_ID=? AND WORKFLOW_ID=?) or exists (select * from doc_rules left join doc_boss on doc_boss.rule_id=doc_rules.rule_id where doc_rules.workflow_id=? and doc_rules.review=1 and doc_boss.user_id=?) ) "  + ORDER_BY + TABLE_DOC_REVIEW_RECV + STOP + DOC_REVIEW_RECV_TIMECREATE;    
    public final String SQL_SELECT_ALL_DOC_REVIEW_SEND_BY_DOC_ID = SELECT + TABLE_DOC_REVIEW_SEND + STOP + STAR + COMMA  + TABLE_DOC_FILES_SEND_REVIEW + STOP + STAR + COMMA + TABLE_USERS + STOP + USERS_FULLNAME + FROM + TABLE_DOC_REVIEW_SEND + LEFT_JOIN + TABLE_DOC_FILES_SEND_REVIEW + ON + TABLE_DOC_REVIEW_SEND + STOP + DOC_REVIEW_SEND_REVIEW_ID + EQUAL + TABLE_DOC_FILES_SEND_REVIEW + STOP + DOC_REVIEW_SEND_REVIEW_ID + LEFT_JOIN + TABLE_USERS + ON + TABLE_DOC_REVIEW_SEND + STOP + DOC_REVIEW_SEND_CREATOR + EQUAL + TABLE_USERS + STOP + USERS_USER_ID +  WHERE + "FORYOU_CREATOR<>? AND DOC_REVIEW_SEND.DOC_ID=? AND ((DOC_REVIEW_SEND.CREATOR=? OR DOC_REVIEW_SEND.CREATOR IN ((SELECT USERSEND_ID FROM doc_trailer_SEND WHERE doc_id=? AND (USERRECV_ID=? OR userrecv_id in (select usersend_id from doc_trailer_send where foryou_id>0 and doc_id=? and userrecv_id=?)))  UNION ( SELECT USERRECV_ID FROM doc_trailer_send WHERE doc_id=? AND USERSEND_ID=? )  UNION ( select USERRECV_ID from doc_trailer_send WHERE doc_id=? and foryou_id<>0 and USERSEND_ID in (select USERRECV_ID from doc_trailer_send WHERE doc_id=? and USERSEND_ID=? and USERRECV_ID<>?) )  )) OR  EXISTS  ( SELECT * FROM DOC_OBSERVERS WHERE OBSERVER_ID=? AND WORKFLOW_ID=?) or exists (select * from doc_rules left join doc_boss on doc_boss.rule_id=doc_rules.rule_id where doc_rules.workflow_id=? and doc_rules.review=1 and doc_boss.user_id=?)) "  + ORDER_BY + TABLE_DOC_REVIEW_SEND + STOP + DOC_REVIEW_SEND_TIMECREATE;    
    public final String SQL_SELECT_ALL_DOC_REVIEW_SEND_PUPLIC="SELECT DOC_REVIEW_SEND.*,DOC_FILES_SEND_REVIEW.*,USERS.FULLNAME FROM DOC_REVIEW_SEND LEFT JOIN DOC_FILES_SEND_REVIEW ON DOC_REVIEW_SEND.REVIEW_ID=DOC_FILES_SEND_REVIEW.REVIEW_ID LEFT JOIN USERS ON DOC_REVIEW_SEND.CREATOR=USERS.USER_ID WHERE DOC_REVIEW_SEND.DOC_ID=? ORDER BY DOC_REVIEW_SEND.TIMECREATE DESC";
    public final String SQL_SELECT_ALL_DOC_REVIEW_SEND_PRIVATE="SELECT DOC_REVIEW_SEND.*,DOC_FILES_SEND_REVIEW.*,USERS.FULLNAME FROM DOC_REVIEW_SEND LEFT JOIN DOC_FILES_SEND_REVIEW ON DOC_REVIEW_SEND.REVIEW_ID=DOC_FILES_SEND_REVIEW.REVIEW_ID LEFT JOIN USERS ON DOC_REVIEW_SEND.CREATOR=USERS.USER_ID WHERE DOC_REVIEW_SEND.DOC_ID=? AND (DOC_REVIEW_SEND.CREATOR=? OR DOC_REVIEW_SEND.REVIEW_IDS LIKE ?) ORDER BY DOC_REVIEW_SEND.TIMECREATE DESC";
    
    public final String SQL_SELECT_ALL_DOC_REVIEW_RECV_PUPLIC=SELECT + TABLE_DOC_REVIEW_RECV + STOP + STAR + COMMA + TABLE_DOC_FILE_REVIEW_RECV + STOP + STAR + COMMA + TABLE_USERS + STOP +USERS_FULLNAME +  FROM + TABLE_DOC_REVIEW_RECV + LEFT_JOIN + TABLE_DOC_FILE_REVIEW_RECV +  ON + TABLE_DOC_REVIEW_RECV + STOP + DOC_REVIEW_RECV_REVIEW_ID + EQUAL + TABLE_DOC_FILE_REVIEW_RECV + STOP + DOC_FILE_REVIEW_RECV_REVIEW_ID +  LEFT_JOIN +  TABLE_USERS + ON + TABLE_DOC_REVIEW_RECV + STOP + DOC_REVIEW_RECV_CREATOR + EQUAL + TABLE_USERS + STOP + USERS_USER_ID + WHERE + TABLE_DOC_REVIEW_RECV + STOP + DOC_REVIEW_RECV_DOC_ID + EQUAL + QUESTION + ORDER_BY +  TABLE_DOC_REVIEW_RECV + STOP + DOC_REVIEW_RECV_TIMECREATE + DESC;
    public final String SQL_SELECT_ALL_DOC_REVIEW_RECV_PRIVATE=SELECT +  TABLE_DOC_REVIEW_RECV + STOP + STAR + COMMA + TABLE_DOC_FILE_REVIEW_RECV + STOP + STAR + COMMA + TABLE_USERS + STOP + USERS_FULLNAME + FROM + TABLE_DOC_REVIEW_RECV + LEFT_JOIN + TABLE_DOC_FILE_REVIEW_RECV +  ON +  TABLE_DOC_REVIEW_RECV + STOP + DOC_REVIEW_RECV_REVIEW_ID + EQUAL + TABLE_DOC_FILE_REVIEW_RECV + STOP + DOC_FILE_REVIEW_RECV_REVIEW_ID + LEFT_JOIN + TABLE_USERS + ON + TABLE_DOC_REVIEW_RECV + STOP + DOC_REVIEW_RECV_CREATOR + EQUAL + TABLE_USERS + STOP + USERS_USER_ID + WHERE + TABLE_DOC_REVIEW_RECV + STOP + DOC_REVIEW_RECV_DOC_ID + EQUAL + QUESTION + AND + OPEN + TABLE_DOC_REVIEW_RECV + STOP + DOC_REVIEW_RECV_CREATOR + EQUAL + QUESTION + OR + TABLE_DOC_REVIEW_RECV + STOP + DOC_REVIEW_RECV_REVIEW_IDS + LIKE +  QUESTION + CLOSE + ORDER_BY + TABLE_DOC_REVIEW_RECV + STOP + DOC_REVIEW_RECV_TIMECREATE + DESC;
    
    
    public final String SQL_SELECT_CHECK_DOC_REVIEW_SEND_FORYOU = SELECT + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERSEND_ID + COMMA + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_FORYOU_ID + FROM + TABLE_DOC_REVIEW_SEND + INNER_JOIN + TABLE_DOC_TRAILER_SEND + ON + TABLE_DOC_REVIEW_SEND + STOP + DOC_REVIEW_SEND_DOC_ID + EQUAL +  TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_DOC_ID + WHERE + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_DOC_ID + EQUAL + QUESTION + AND + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_FORYOU_ID + DIFF + 0 + AND + TABLE_DOC_REVIEW_SEND + STOP  + DOC_REVIEW_SEND_REVIEW_ID + EQUAL + QUESTION  + AND + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERRECV_ID + EQUAL +  TABLE_DOC_REVIEW_SEND + STOP + DOC_REVIEW_SEND_CREATOR;
    public final String SQL_SELECT_CHECK_DOC_REVIEW_RECV_FORYOU = SELECT + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERSEND_ID + COMMA + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_FORYOU_ID + FROM + TABLE_DOC_REVIEW_RECV + INNER_JOIN + TABLE_DOC_TRAILER_RECV + ON + TABLE_DOC_REVIEW_RECV + STOP + DOC_REVIEW_RECV_DOC_ID + EQUAL +  TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_DOC_ID + WHERE + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_FORYOU_ID + DIFF + 0 + AND + TABLE_DOC_REVIEW_RECV + STOP  + DOC_REVIEW_RECV_REVIEW_ID + EQUAL + QUESTION  + AND + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERRECV_ID + EQUAL +  TABLE_DOC_REVIEW_RECV + STOP + DOC_REVIEW_RECV_CREATOR;


    public final String SQL_SELECT_ALL_DOC_CHECK_DIRECT = SELECT + STAR + FROM + TABLE_DOC_RULES + WHERE + DOC_RULES_ACTIVE + DIFF + 0 + AND + DOC_RULES_RULE_ID + IN + OPEN + SELECT + DOC_BOSS_RULE_ID + FROM + TABLE_DOC_BOSS + WHERE + DOC_BOSS_USER_ID + EQUAL + QUESTION +CLOSE + AND + DOC_RULES_WORKFLOW_ID + EQUAL + QUESTION;
    public final String SQL_SELECT_DOC_CHECK_ASSIGN = SELECT + STAR + FROM + TABLE_DOC_BOSS + LEFT_JOIN + TABLE_DOC_RULES + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_BOSS + STOP + DOC_BOSS_RULE_ID + WHERE + TABLE_DOC_RULES + STOP + DOC_RULES_ACTIVE + DIFF + 0 + AND + TABLE_DOC_RULES + STOP + DOC_RULES_WORKFLOW_ID + EQUAL + QUESTION + AND + TABLE_DOC_BOSS + STOP + DOC_BOSS_USER_ID + EQUAL + QUESTION;    
    public final String SQL_SELECT_DOC_CHECK_RULES = SELECT + TABLE_DOC_RULES + STOP + STAR + FROM + TABLE_DOC_BOSS + LEFT_JOIN + TABLE_DOC_RULES + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_BOSS + STOP + DOC_BOSS_RULE_ID + WHERE + TABLE_DOC_RULES + STOP + DOC_RULES_ACTIVE + DIFF + 0 + AND + TABLE_DOC_RULES + STOP + DOC_RULES_WORKFLOW_ID + EQUAL + QUESTION + AND + TABLE_DOC_BOSS + STOP + DOC_BOSS_USER_ID + EQUAL + QUESTION;    
    public final String SQL_SELECT_ALL_DOC_CHECK_OBSERVER = SELECT + STAR + FROM + TABLE_DOC_OBSERVERS + WHERE + DOC_OBSERVERS_OBSERVER_ID + EQUAL + QUESTION + AND + DOC_OBSERVERS_WORKFLOW_ID + EQUAL + QUESTION;        
    public final String SQL_SELECT_ALL_DOC_CHECK_REVIEW = SELECT + TABLE_DOC_RULES + STOP + DOC_RULES_COMMENT + FROM + TABLE_DOC_RULES + LEFT_JOIN + TABLE_DOC_BOSS + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_BOSS + STOP + DOC_BOSS_RULE_ID + WHERE + TABLE_DOC_RULES + STOP + DOC_RULES_ACTIVE + DIFF + 0 + AND + TABLE_DOC_RULES + STOP + DOC_RULES_WORKFLOW_ID + EQUAL + QUESTION + AND + TABLE_DOC_BOSS + STOP + DOC_BOSS_USER_ID + EQUAL + QUESTION;        
    
    
    public final String SQL_ELEMENT_IN_DOCS[] ={
    TABLE_FORM + STOP + FORM_NAME + AS + "FORM_NAME",
    TABLE_DOSSIERS+STOP+DOSSIERS_NAME + AS + "DOSSIERS_NAME",
    TABLE_DOCSRECV+STOP+DOCSRECV_LOCALCODE,
    TABLE_DOCSRECV+STOP+DOCSRECV_DOCCODE,
    TABLE_DOCSRECV+STOP+DOCSRECV_LOCALDATE,
    TABLE_DOCSRECV+STOP+DOCSRECV_DOCDATE,
    TABLE_STATUS + STOP + STATUS_NAME + AS + "STATUS_NAME",
    TABLE_FROM+STOP+FROM_VN_NAME + AS + "FROM_VN_NAME",
    TABLE_DOCSRECV+STOP+DOCSRECV_ABSTRACT,
    TABLE_DEPARTMENTS + STOP + DEPARTMENTS_NAME + AS + "DEPARTMENTS_NAME",
    
    TABLE_SECURE + STOP + SECURE_NAME + AS + "SECURE_NAME",
    TABLE_DOCSRECV+STOP+DOCSRECV_SIGNER,
    
    TABLE_EXPRESS + STOP +EXPRESS_NAME + AS + "EXPRESS_NAME",
    TABLE_VIA + STOP + VIA_NAME + AS + "VIA_NAME",
    TABLE_DOCTYPE+STOP + DOCTYPE_NAME + AS + "DOCTYPE_NAME",
    
    TABLE_DOCSRECV+STOP+DOCSRECV_DEADLINE,
    TABLE_DOCSRECV+STOP+DOCSRECV_ADDRESS
    };
    public final String SQL_ELEMENT_IN_DOCS_SEND[] ={
    TABLE_FORM + STOP + FORM_NAME + AS + "FORM_NAME",
    TABLE_DOSSIERS+STOP+DOSSIERS_NAME + AS + "DOSSIERS_NAME",
    
    TABLE_DOCSSEND+STOP+DOCSSEND_LOCALCODE,
    TABLE_DOCSSEND+STOP+DOCSSEND_DOCCODE,
    TABLE_DOCSSEND+STOP+DOCSSEND_LOCALDATE,
    TABLE_DOCSSEND+STOP+DOCSSEND_DOCDATE,
    TABLE_STATUS + STOP + STATUS_NAME + AS + "STATUS_NAME",
    TABLE_FROM+STOP+FROM_VN_NAME + AS + "FROM_VN_NAME",
    TABLE_DOCSSEND+STOP+DOCSSEND_ABSTRACT,
    TABLE_DEPARTMENTS + STOP + DEPARTMENTS_NAME + AS + "DEPARTMENTS_NAME",
    
    TABLE_SECURE + STOP + SECURE_NAME + AS + "SECURE_NAME",
    TABLE_DOCSSEND+STOP+DOCSSEND_SIGNER,
    
    TABLE_EXPRESS + STOP +EXPRESS_NAME + AS + "EXPRESS_NAME",
    TABLE_VIA + STOP + VIA_NAME + AS + "VIA_NAME",
    TABLE_DOCTYPE+STOP + DOCTYPE_NAME + AS + "DOCTYPE_NAME",
    
    TABLE_DOCSSEND+STOP+DOCSSEND_DEADLINE,
    TABLE_DOCSSEND+STOP+DOCSSEND_ADDRESS
    };
    
    
    
    public final String SQL_SELECT_FILESEND_BY_LAST=SELECT + STAR + FROM + TABLE_FILESSEND + WHERE + FILESSEND_DOC_ID + EQUAL + QUESTION + ORDER_BY + FILESSEND_ID + DESC;
    public final String SQL_SELECT_FILERECV_BY_LAST = SELECT + STAR + FROM + TABLE_FILESRECV + WHERE + FILESRECV_DOC_ID + EQUAL + QUESTION + ORDER_BY + FILESRECV_ID + DESC;
    
    
    //public final String SQL_ALL_DOC_REFERENCE = SELECT + DOCSRECV_DOC_ID + COMMA + DOCSRECV_DOCCODE + COMMA + DOCSRECV_DOCDATE + COMMA + DOCSRECV_TIMECREATE + FROM + TABLE_DOCSRECV + WHERE + DOCSRECV_DOC_ID + IN + OPEN + "#" + CLOSE ;
    //public final String SQL_ALL_DOC_REFERENCE_ID = SELECT + DOC_REFERENCE_DOC_REFERENCE_ID + FROM + TABLE_DOC_REFERENCE + WHERE + DOC_REFERENCE_DOC_ID + EQUAL + QUESTION ;
   // public final String SQL_ALL_DOC_RECV_OPTION = SELECT + DOCSRECV_DOC_ID + COMMA + DOCSRECV_DOCCODE + COMMA + DOCSRECV_DOCDATE + COMMA + DOCSRECV_TIMECREATE + FROM + TABLE_DOCSRECV + WHERE + DOCSRECV_DOC_ID + IN + OPEN + "#" + CLOSE + AND + DOCSRECV_DOC_ID + NOT + IN + OPEN + SELECT + DOC_REFERENCE_DOC_REFERENCE_ID + FROM + TABLE_DOC_REFERENCE + WHERE + DOC_REFERENCE_DOC_ID + EQUAL + QUESTION + CLOSE ;
    public final String SQL_ALL_DOC_RECV_IN_ID=SELECT + STAR + FROM + TABLE_DOCSRECV + WHERE + DOCSRECV_DOC_ID + IN + OPEN + "#" + CLOSE;
    
    
    
    //BEGIN DOC_REPORT
    
    public final String SQL_SELECT_TOTAL_DOC_STATUS_RECV=SELECT + COUNT + OPEN +  TABLE_STATUS + STOP + STATUS_ID + CLOSE + COMMA + TABLE_STATUS + STOP + STATUS_NAME + COMMA +  TABLE_STATUS + STOP + STATUS_DESCRIPTION + FROM + TABLE_DOCSRECV + DOCS_RECV_left_DOC_TRAILER_RECV + LEFT_JOIN + TABLE_STATUS + ON + TABLE_STATUS + STOP + STATUS_ID + EQUAL + TABLE_DOCSRECV + STOP + DOCSRECV_STATUS_ID + WHERE + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + "<" + QUESTION +  AND +  TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION  + GROUP_BY + TABLE_STATUS + STOP + STATUS_ID + COMMA + TABLE_STATUS + STOP + STATUS_NAME + COMMA +  TABLE_STATUS + STOP + STATUS_DESCRIPTION ;
    public final String SQL_SELECT_TOTAL_DOC_STATUS_SEND=SELECT + COUNT + OPEN +  TABLE_STATUS + STOP + STATUS_ID + CLOSE + COMMA + TABLE_STATUS + STOP + STATUS_NAME + COMMA +  TABLE_STATUS + STOP + STATUS_DESCRIPTION + FROM + TABLE_DOCSSEND + DOCS_SEND_left_DOC_TRAILER_SEND + LEFT_JOIN + TABLE_STATUS + ON + TABLE_STATUS + STOP + STATUS_ID + EQUAL + TABLE_DOCSSEND + STOP + DOCSSEND_STATUS_ID + WHERE + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + "<" +  QUESTION +  AND +  TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION + AND + OPEN + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + IS + NOT_NULL + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + DIFF + "''" + CLOSE  + GROUP_BY + TABLE_STATUS + STOP + STATUS_ID + COMMA + TABLE_STATUS + STOP + STATUS_NAME + COMMA +  TABLE_STATUS + STOP + STATUS_DESCRIPTION ;
    
    public final String SQL_SELECT_TOTAL_DOC_TRANSFER_RECV=SELECT + COUNT + OPEN + TABLE_TRANSFER + STOP + TRANSFER_ID + CLOSE + COMMA + TABLE_TRANSFER + STOP + STATUS_NAME + FROM + TABLE_TRANSFER + LEFT_JOIN + TABLE_DOC_TRAILER_RECV + ON + TABLE_TRANSFER + STOP + TRANSFER_ID + EQUAL + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_VIEWS + LEFT_JOIN + TABLE_DOCSRECV + ON + TABLE_DOCSRECV + STOP + DOCSRECV_DOC_ID + EQUAL + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_DOC_ID + WHERE + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + "<" + QUESTION + AND + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION + GROUP_BY + TABLE_TRANSFER + STOP + TRANSFER_ID + COMMA + TABLE_TRANSFER + STOP + STATUS_NAME ;
    public final String SQL_SELECT_TOTAL_DOC_TRANSFER_SEND=SELECT + COUNT + OPEN + TABLE_TRANSFER + STOP + TRANSFER_ID + CLOSE + COMMA + TABLE_TRANSFER + STOP + STATUS_NAME + FROM + TABLE_TRANSFER + LEFT_JOIN + TABLE_DOC_TRAILER_SEND + ON + TABLE_TRANSFER + STOP + TRANSFER_ID + EQUAL + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_VIEWS + LEFT_JOIN + TABLE_DOCSSEND + ON + TABLE_DOCSSEND + STOP + DOCSSEND_DOC_ID + EQUAL + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_DOC_ID + WHERE + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION + AND + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION + AND + OPEN + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + IS + NOT_NULL + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + DIFF + "''" + CLOSE + GROUP_BY + TABLE_TRANSFER + STOP + TRANSFER_ID + COMMA + TABLE_TRANSFER + STOP + STATUS_NAME ;
    
    public final String SQL_SELECT_TOTAL_DOC_TYPE_RECV=SELECT + COUNT + OPEN + TABLE_DOCTYPE + STOP + DOCTYPE_DOCTYPE_ID + CLOSE + COMMA + TABLE_DOCTYPE + STOP + DOCTYPE_NAME + FROM + TABLE_DOCSRECV + DOCS_RECV_left_DOC_TRAILER_RECV + LEFT_JOIN + TABLE_DOCTYPE + ON + TABLE_DOCTYPE + STOP + DOCTYPE_DOCTYPE_ID + EQUAL + TABLE_DOCSRECV + STOP + DOCSRECV_DOCTYPE_ID + WHERE + DOCSRECV_TIMECREATE + ">=" + QUESTION + AND + DOCSRECV_TIMECREATE + "<" + QUESTION + AND + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION + GROUP_BY + TABLE_DOCTYPE + STOP + DOCTYPE_DOCTYPE_ID + COMMA + TABLE_DOCTYPE + STOP + DOCTYPE_NAME ;
    public final String SQL_SELECT_TOTAL_DOC_TYPE_SEND=SELECT + COUNT + OPEN + TABLE_DOCTYPE + STOP + DOCTYPE_DOCTYPE_ID + CLOSE + COMMA + TABLE_DOCTYPE + STOP + DOCTYPE_NAME + FROM + TABLE_DOCSSEND + DOCS_SEND_left_DOC_TRAILER_SEND + LEFT_JOIN + TABLE_DOCTYPE + ON + TABLE_DOCTYPE + STOP + DOCTYPE_DOCTYPE_ID + EQUAL + TABLE_DOCSSEND + STOP + DOCSSEND_DOCTYPE_ID + WHERE + DOCSSEND_TIMECREATE + ">=" + QUESTION + AND + DOCSSEND_TIMECREATE + "<" + QUESTION + AND + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION + AND + OPEN + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + IS + NOT_NULL + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + DIFF + "''" + CLOSE + GROUP_BY + TABLE_DOCTYPE + STOP + DOCTYPE_DOCTYPE_ID + COMMA + TABLE_DOCTYPE + STOP + DOCTYPE_NAME ;
    
    public final String SQL_SELECT_TOTAL_DOC_BRANCH_RECV=SELECT + COUNT + OPEN + TABLE_BRANCH + STOP + BRANCH_BRANCH_ID + CLOSE + COMMA + TABLE_BRANCH + STOP + BRANCH_NAME + FROM + TABLE_BRANCH + LEFT_JOIN + TABLE_DOCSRECV + ON + TABLE_BRANCH + STOP + BRANCH_BRANCH_ID + EQUAL + TABLE_DOCSRECV + STOP + DOCSRECV_BRANCH_ID + DOCS_RECV_left_DOC_TRAILER_RECV + WHERE + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + "<" + QUESTION + AND  + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION + GROUP_BY + TABLE_BRANCH + STOP + BRANCH_BRANCH_ID + COMMA + TABLE_BRANCH + STOP + BRANCH_NAME ;
    public final String SQL_SELECT_TOTAL_DOC_BRANCH_SEND=SELECT + COUNT + OPEN + TABLE_BRANCH + STOP + BRANCH_BRANCH_ID + CLOSE + COMMA + TABLE_BRANCH + STOP + BRANCH_NAME + FROM + TABLE_BRANCH + LEFT_JOIN + TABLE_DOCSSEND + ON + TABLE_BRANCH + STOP + BRANCH_BRANCH_ID + EQUAL + TABLE_DOCSSEND + STOP + DOCSSEND_BRANCH_ID + DOCS_SEND_left_DOC_TRAILER_SEND + WHERE + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION + AND  + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION + AND + OPEN + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + IS + NOT_NULL + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + DIFF + "''" + CLOSE + GROUP_BY + TABLE_BRANCH + STOP + BRANCH_BRANCH_ID + COMMA + TABLE_BRANCH + STOP + BRANCH_NAME;
    
    public final String SQL_SELECT_TOTAL_DOC_RECV_BY_PARAM=SELECT + TABLE_DOCSRECV + STOP + STAR + COMMA + TABLE_FROM + STOP + FROM_VN_NAME + COMMA + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_READED + FROM + TABLE_DOCSRECV + DOCS_RECV_left_DOC_TRAILER_RECV + LEFT_JOIN + TABLE_FROM + ON + TABLE_DOCSRECV + STOP + DOCSRECV_FROM_ID + EQUAL + TABLE_FROM + STOP + FROM_ID + WHERE + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION ;
    public final String SQL_SELECT_TOTAL_DOC_RECV_BY_PARAM_ADD_USER_ID = AND + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION;
    public final String SQL_SELECT_TOTAL_DOC_SEND_BY_PARAM=SELECT + TABLE_DOCSSEND + STOP + STAR + COMMA + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_READED +  FROM + TABLE_DOCSSEND + DOCS_SEND_left_DOC_TRAILER_SEND + WHERE + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION  + AND + OPEN + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + IS + NOT_NULL + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + DIFF + "''" + CLOSE;
    public final String SQL_SELECT_TOTAL_DOC_SEND_BY_PARAM_ADD_USER_ID =  AND + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION;
    public final String[] SQL_SELECT_TOTAL_DOC_BY_PARAM={SQL_SELECT_TOTAL_DOC_RECV_BY_PARAM,SQL_SELECT_TOTAL_DOC_SEND_BY_PARAM};
    
    
    public final String SQL_SELECT_TOTAL_DOC_RECV_BY_OBSERVER_PARAM=SELECT + TABLE_DOCSRECV + STOP + STAR + COMMA + TABLE_FROM + STOP + FROM_VN_NAME + FROM + TABLE_DOCSRECV +  LEFT_JOIN + TABLE_FROM + ON + TABLE_DOCSRECV + STOP + DOCSRECV_FROM_ID + EQUAL + TABLE_FROM + STOP + FROM_ID + WHERE + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION ;
    public final String SQL_SELECT_TOTAL_DOC_RECV_BY_OBSERVER_PARAM_ADD_USER_ID = AND + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION;
    public final String SQL_SELECT_TOTAL_DOC_SEND_BY_OBSERVER_PARAM=SELECT + TABLE_DOCSSEND + STOP + STAR +  FROM + TABLE_DOCSSEND +  WHERE + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION  + AND + OPEN + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + IS + NOT_NULL + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + DIFF + "''" + CLOSE;
    public final String SQL_SELECT_TOTAL_DOC_SEND_BY_OBSERVER_PARAM_ADD_USER_ID =  AND + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION;
    public final String[] SQL_SELECT_TOTAL_DOC_BY_OBSERVER_PARAM={SQL_SELECT_TOTAL_DOC_RECV_BY_OBSERVER_PARAM,SQL_SELECT_TOTAL_DOC_SEND_BY_OBSERVER_PARAM};
    
    public final String SQL_SELECT_DOC_RECV_GROUP=SELECT + TABLE_DOCSRECV + STOP + STAR + COMMA + TABLE_FROM + STOP + FROM_VN_NAME + FROM + TABLE_DOCSRECV + LEFT_JOIN + TABLE_FROM + ON + TABLE_DOCSRECV + STOP + DOCSRECV_FROM_ID + EQUAL + TABLE_FROM + STOP + FROM_ID + WHERE + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION + " AND DOCS_RECV.DOC_ID IN (SELECT DOC_ID FROM DOC_TRAILER_RECV INNER JOIN USERS ON USERS.USER_ID=DOC_TRAILER_RECV.USERRECV_ID)";
    public final String SQL_SELECT_DOC_SEND_GROUP=SELECT + TABLE_DOCSSEND + STOP + STAR +  FROM + TABLE_DOCSSEND + WHERE + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION  + AND + OPEN + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + IS + NOT_NULL + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + DIFF + "''" + CLOSE + " AND DOCS_SEND.DOC_ID IN (SELECT DOC_ID FROM DOC_TRAILER_SEND INNER JOIN USERS ON USERS.USER_ID=DOC_TRAILER_SEND.USERRECV_ID)";
    public final String[] SQL_SELECT_DOCS_GROUP={SQL_SELECT_DOC_RECV_GROUP,SQL_SELECT_DOC_SEND_GROUP};
    
    public final String SQL_SELECT_DOC_RECV_DEP=SELECT + TABLE_DOCSRECV + STOP + STAR + COMMA + TABLE_FROM + STOP + FROM_VN_NAME + FROM + TABLE_DOCSRECV + LEFT_JOIN + TABLE_FROM + ON + TABLE_DOCSRECV + STOP + DOCSRECV_FROM_ID + EQUAL + TABLE_FROM + STOP + FROM_ID + WHERE + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION + " AND DOCS_RECV.DOC_ID IN (SELECT DOC_ID FROM DOC_TRAILER_RECV INNER JOIN USERS ON USERS.USER_ID=DOC_TRAILER_RECV.USERRECV_ID)";
    public final String SQL_SELECT_DOC_SEND_DEP=SELECT + TABLE_DOCSSEND + STOP + STAR + FROM + TABLE_DOCSSEND + WHERE + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION  + AND + OPEN + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + IS + NOT_NULL + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + DIFF + "''" + CLOSE + " AND DOCS_SEND.DOC_ID IN (SELECT DOC_ID FROM DOC_TRAILER_SEND INNER JOIN USERS ON USERS.USER_ID=DOC_TRAILER_SEND.USERRECV_ID)";
    public final String[] SQL_SELECT_DOCS_DEP={SQL_SELECT_DOC_RECV_DEP,SQL_SELECT_DOC_SEND_DEP};
    
    public final String SQL_SELECT_DOC_RECV_FROM_RECV=SELECT + TABLE_DOCSRECV + STOP + STAR + COMMA + TABLE_FROM + STOP + FROM_VN_NAME + FROM + TABLE_DOCSRECV + LEFT_JOIN + TABLE_FROM + ON + TABLE_DOCSRECV + STOP + DOCSRECV_FROM_ID + EQUAL + TABLE_FROM + STOP + FROM_ID + WHERE + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION;
    public final String SQL_SELECT_DOC_SEND_FROM_RECV=SELECT + TABLE_DOCSSEND + STOP + STAR + FROM + TABLE_DOCSSEND + WHERE + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION  + AND + OPEN + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + IS + NOT_NULL + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + DIFF + "''" + CLOSE;
    public final String[] SQL_SELECT_DOCS_FROM_RECV={SQL_SELECT_DOC_RECV_FROM_RECV,SQL_SELECT_DOC_SEND_FROM_RECV};
    
    public final String SQL_SELECT_DOC_RECV_BY_DOCTYPE=SELECT + TABLE_DOCSRECV + STOP + STAR + COMMA + TABLE_FROM + STOP + FROM_VN_NAME + FROM + TABLE_DOCSRECV + LEFT_JOIN + TABLE_DOCTYPE + ON + TABLE_DOCSRECV + STOP  + DOCSRECV_DOCTYPE_ID + EQUAL + TABLE_DOCTYPE + STOP + DOCTYPE_DOCTYPE_ID + LEFT_JOIN + TABLE_FROM + ON + TABLE_DOCSRECV + STOP + DOCSRECV_FROM_ID + EQUAL + TABLE_FROM + STOP + FROM_ID + WHERE + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION;
    public final String SQL_SELECT_DOC_SEND_BY_DOCTYPE=SELECT + TABLE_DOCSSEND + STOP + STAR +  FROM + TABLE_DOCSSEND  + WHERE + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION  + AND + OPEN + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + IS + NOT_NULL + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + DIFF + "''" + CLOSE;
    public final String[] SQL_SELECT_DOCS_BY_DOCTYPE={SQL_SELECT_DOC_RECV_BY_DOCTYPE,SQL_SELECT_DOC_SEND_BY_DOCTYPE};
    
    
    
    
    public final String SQL_SELECT_REPORT_EXCEL_RECV="SELECT # FROM DOCS_RECV LEFT JOIN DOC_TRAILER_RECV ON  DOC_TRAILER_RECV.DOC_ID=DOCS_RECV.DOC_ID LEFT JOIN FORM ON  FORM.FORM_ID=DOCS_RECV.FORM_ID LEFT JOIN DOC_DOSSIERS ON DOCS_RECV.DOC_ID=DOC_DOSSIERS.DOC_ID LEFT JOIN DOSSIERS ON DOSSIERS.ID=DOC_DOSSIERS.DOSSIERS_ID LEFT JOIN STATUS ON  STATUS.STATUS_ID=DOCS_RECV.STATUS_ID LEFT JOIN DOC_FROM ON  DOC_FROM.FROM_ID=DOCS_RECV.FROM_ID LEFT JOIN SECURE ON  SECURE.SECURE_ID=DOCS_RECV.SECURE_ID LEFT JOIN EXPRESS ON  EXPRESS.EXPRESS_ID=DOCS_RECV.EXPRESS_ID LEFT JOIN VIA ON  VIA.VIA_ID=DOCS_RECV.VIA_ID LEFT JOIN DOCTYPE ON  DOCTYPE.DOCTYPE_ID=DOCS_RECV.DOCTYPE_ID";
    public final String SQL_SELECT_REPORT_EXCEL_SEND="SELECT # FROM DOCS_SEND LEFT JOIN DOC_TRAILER_SEND ON  DOC_TRAILER_SEND.DOC_ID=DOCS_SEND.DOC_ID LEFT JOIN FORM ON  FORM.FORM_ID=DOCS_SEND.FORM_ID LEFT JOIN DOC_DOSSIERS ON DOCS_SEND.DOC_ID=DOC_DOSSIERS.DOC_ID LEFT JOIN DOSSIERS ON DOSSIERS.ID=DOC_DOSSIERS.DOSSIERS_ID LEFT JOIN STATUS ON  STATUS.STATUS_ID=DOCS_SEND.STATUS_ID LEFT JOIN DEPARTMENT ON  DEPARTMENT.DEPARTMENT_ID=DOCS_SEND.STOREAGE_ID LEFT JOIN SECURE ON  SECURE.SECURE_ID=DOCS_SEND.SECURE_ID LEFT JOIN EXPRESS ON  EXPRESS.EXPRESS_ID=DOCS_SEND.EXPRESS_ID LEFT JOIN VIA ON  VIA.VIA_ID=DOCS_SEND.VIA_ID LEFT JOIN DOCTYPE ON  DOCTYPE.DOCTYPE_ID=DOCS_SEND.DOCTYPE_ID";
    public final String[] SQL_SELECT_REPORT_EXCEL_DOC={SQL_SELECT_REPORT_EXCEL_RECV,SQL_SELECT_REPORT_EXCEL_SEND};

    
    public final String SQL_SELECT_REPORT_EXCEL_RECV_DOC_TYPE="SELECT # FROM DOCS_RECV LEFT JOIN FORM ON  FORM.FORM_ID=DOCS_RECV.FORM_ID LEFT JOIN DOC_DOSSIERS ON DOCS_RECV.DOC_ID=DOC_DOSSIERS.DOC_ID LEFT JOIN DOSSIERS ON DOSSIERS.ID=DOC_DOSSIERS.DOSSIERS_ID LEFT JOIN STATUS ON  STATUS.STATUS_ID=DOCS_RECV.STATUS_ID LEFT JOIN DOC_FROM ON  DOC_FROM.FROM_ID=DOCS_RECV.FROM_ID LEFT JOIN DEPARTMENT ON  DEPARTMENT.DEPARTMENT_ID=DOCS_RECV.STOREAGE_ID LEFT JOIN SECURE ON  SECURE.SECURE_ID=DOCS_RECV.SECURE_ID LEFT JOIN EXPRESS ON  EXPRESS.EXPRESS_ID=DOCS_RECV.EXPRESS_ID LEFT JOIN VIA ON  VIA.VIA_ID=DOCS_RECV.VIA_ID LEFT JOIN DOCTYPE ON  DOCTYPE.DOCTYPE_ID=DOCS_RECV.DOCTYPE_ID";
    public final String SQL_SELECT_REPORT_EXCEL_SEND_DOC_TYPE="SELECT # FROM DOCS_SEND LEFT JOIN FORM ON  FORM.FORM_ID=DOCS_SEND.FORM_ID LEFT JOIN DOC_DOSSIERS ON DOCS_SEND.DOC_ID=DOC_DOSSIERS.DOC_ID LEFT JOIN DOSSIERS ON DOSSIERS.ID=DOC_DOSSIERS.DOSSIERS_ID LEFT JOIN STATUS ON  STATUS.STATUS_ID=DOCS_SEND.STATUS_ID LEFT JOIN DEPARTMENT ON  DEPARTMENT.DEPARTMENT_ID=DOCS_SEND.STOREAGE_ID LEFT JOIN SECURE ON  SECURE.SECURE_ID=DOCS_SEND.SECURE_ID LEFT JOIN EXPRESS ON  EXPRESS.EXPRESS_ID=DOCS_SEND.EXPRESS_ID LEFT JOIN VIA ON  VIA.VIA_ID=DOCS_SEND.VIA_ID LEFT JOIN DOCTYPE ON  DOCTYPE.DOCTYPE_ID=DOCS_SEND.DOCTYPE_ID";
    public final String[] SQL_SELECT_REPORT_EXCEL_DOC_DOC_TYPE={SQL_SELECT_REPORT_EXCEL_RECV_DOC_TYPE,SQL_SELECT_REPORT_EXCEL_SEND_DOC_TYPE};
    
    
    
    public final String SQL_SELECT_REPORT_EXCEL_RECV_DOC_ALL="SELECT # FROM DOCS_RECV LEFT JOIN FORM ON  FORM.FORM_ID=DOCS_RECV.FORM_ID LEFT JOIN DOC_DOSSIERS ON DOCS_RECV.DOC_ID=DOC_DOSSIERS.DOC_ID LEFT JOIN DOSSIERS ON DOSSIERS.ID=DOC_DOSSIERS.DOSSIERS_ID LEFT JOIN STATUS ON  STATUS.STATUS_ID=DOCS_RECV.STATUS_ID LEFT JOIN DOC_FROM ON  DOC_FROM.FROM_ID=DOCS_RECV.FROM_ID LEFT JOIN DEPARTMENT ON  DEPARTMENT.DEPARTMENT_ID=DOCS_RECV.STOREAGE_ID LEFT JOIN SECURE ON  SECURE.SECURE_ID=DOCS_RECV.SECURE_ID LEFT JOIN EXPRESS ON  EXPRESS.EXPRESS_ID=DOCS_RECV.EXPRESS_ID LEFT JOIN VIA ON  VIA.VIA_ID=DOCS_RECV.VIA_ID LEFT JOIN DOCTYPE ON  DOCTYPE.DOCTYPE_ID=DOCS_RECV.DOCTYPE_ID";
    public final String SQL_SELECT_REPORT_EXCEL_SEND_DOC_ALL="SELECT # FROM DOCS_SEND LEFT JOIN FORM ON  FORM.FORM_ID=DOCS_SEND.FORM_ID LEFT JOIN DOC_DOSSIERS ON DOCS_SEND.DOC_ID=DOC_DOSSIERS.DOC_ID LEFT JOIN DOSSIERS ON DOSSIERS.ID=DOC_DOSSIERS.DOSSIERS_ID LEFT JOIN STATUS ON  STATUS.STATUS_ID=DOCS_SEND.STATUS_ID LEFT JOIN DEPARTMENT ON  DEPARTMENT.DEPARTMENT_ID=DOCS_SEND.STOREAGE_ID LEFT JOIN SECURE ON  SECURE.SECURE_ID=DOCS_SEND.SECURE_ID LEFT JOIN EXPRESS ON  EXPRESS.EXPRESS_ID=DOCS_SEND.EXPRESS_ID LEFT JOIN VIA ON  VIA.VIA_ID=DOCS_SEND.VIA_ID LEFT JOIN DOCTYPE ON  DOCTYPE.DOCTYPE_ID=DOCS_SEND.DOCTYPE_ID";
    public final String[] SQL_SELECT_REPORT_EXCEL_DOC_DOC_ALL={SQL_SELECT_REPORT_EXCEL_RECV_DOC_ALL,SQL_SELECT_REPORT_EXCEL_SEND_DOC_ALL};
    
    public final String SQL_SELECT_REPORT_EXCEL_RECV_FROM="SELECT # FROM DOCS_RECV LEFT JOIN FORM ON  FORM.FORM_ID=DOCS_RECV.FORM_ID LEFT JOIN DOC_DOSSIERS ON DOCS_RECV.DOC_ID=DOC_DOSSIERS.DOC_ID LEFT JOIN DOSSIERS ON DOSSIERS.ID=DOC_DOSSIERS.DOSSIERS_ID LEFT JOIN STATUS ON  STATUS.STATUS_ID=DOCS_RECV.STATUS_ID LEFT JOIN DOC_FROM ON  DOC_FROM.FROM_ID=DOCS_RECV.FROM_ID LEFT JOIN DEPARTMENT ON  DEPARTMENT.DEPARTMENT_ID=DOCS_RECV.STOREAGE_ID LEFT JOIN SECURE ON  SECURE.SECURE_ID=DOCS_RECV.SECURE_ID LEFT JOIN EXPRESS ON  EXPRESS.EXPRESS_ID=DOCS_RECV.EXPRESS_ID LEFT JOIN VIA ON  VIA.VIA_ID=DOCS_RECV.VIA_ID LEFT JOIN DOCTYPE ON  DOCTYPE.DOCTYPE_ID=DOCS_RECV.DOCTYPE_ID";
    public final String SQL_SELECT_REPORT_EXCEL_SEND_FROM="SELECT # FROM DOCS_SEND LEFT JOIN FORM ON  FORM.FORM_ID=DOCS_SEND.FORM_ID LEFT JOIN DOC_DOSSIERS ON DOCS_SEND.DOC_ID=DOC_DOSSIERS.DOC_ID LEFT JOIN DOSSIERS ON DOSSIERS.ID=DOC_DOSSIERS.DOSSIERS_ID LEFT JOIN STATUS ON  STATUS.STATUS_ID=DOCS_SEND.STATUS_ID LEFT JOIN DEPARTMENT ON  DEPARTMENT.DEPARTMENT_ID=DOCS_SEND.STOREAGE_ID LEFT JOIN SECURE ON  SECURE.SECURE_ID=DOCS_SEND.SECURE_ID LEFT JOIN EXPRESS ON  EXPRESS.EXPRESS_ID=DOCS_SEND.EXPRESS_ID LEFT JOIN VIA ON  VIA.VIA_ID=DOCS_SEND.VIA_ID LEFT JOIN DOCTYPE ON  DOCTYPE.DOCTYPE_ID=DOCS_SEND.DOCTYPE_ID";
    public final String[] SQL_SELECT_REPORT_EXCEL_DOC_FROM={SQL_SELECT_REPORT_EXCEL_RECV_FROM,SQL_SELECT_REPORT_EXCEL_SEND_FROM};
    
    
    public final String SQL_WHERE_REPORT_EXCEL_RECV= WHERE + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION + AND + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION;
    public final String SQL_WHERE_REPORT_EXCEL_SEND=WHERE + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION + AND + TABLE_DOC_TRAILER_SEND + STOP + DOC_TRAILER_SEND_USERRECV_ID + EQUAL + QUESTION + AND + OPEN + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + IS + NOT_NULL + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + DIFF + "''" + CLOSE;
    public final String[] SQL_WHERE_REPORT_EXCEL_DOC={SQL_WHERE_REPORT_EXCEL_RECV,SQL_WHERE_REPORT_EXCEL_SEND};    
    
    public final String SQL_WHERE_REPORT_EXCEL_RECV_ALL= WHERE + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION  ;
    public final String SQL_WHERE_REPORT_EXCEL_SEND_ALL=WHERE + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION + AND + OPEN + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + IS + NOT_NULL + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + DIFF + "''" + CLOSE;
    public final String[] SQL_WHERE_REPORT_EXCEL_DOC_ALL={SQL_WHERE_REPORT_EXCEL_RECV_ALL,SQL_WHERE_REPORT_EXCEL_SEND_ALL};    
    
    public final String  SQL_WHERE_REPORT_EXCEL_DOCSRECV_DOCIDS_IN= AND + TABLE_DOCSRECV + STOP + DOCSRECV_DOC_ID + IN + OPEN + "#" + CLOSE;
    public final String  SQL_WHERE_REPORT_EXCEL_DOCSSEND_DOCIDS_IN= AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOC_ID + IN + OPEN + "#" + CLOSE;
    public final String[] SQL_WHERE_REPORT_EXCEL_DOCS_DOCIDS_IN={SQL_WHERE_REPORT_EXCEL_DOCSRECV_DOCIDS_IN,SQL_WHERE_REPORT_EXCEL_DOCSSEND_DOCIDS_IN};    
    
    
    public final String[] FIELDSDATE_SEND={"FORM.NAME AS FORM_NAME","DOSSIERS.NAME AS DOSSIERS_NAME","#"+".LOCALCODE","#"+".DOCCODE","#"+".LOCALDATE","#"+".DOCDATE","STATUS.NAME AS STATUS_NAME","#"+".FROM_ID","#"+".ABSTRACT","DEPARTMENT.NAME AS DEPARTMENT_NAME","SECURE.NAME AS SECURE_NAME","#"+".SIGNER","EXPRESS.NAME AS EXPRESS_NAME","VIA.NAME AS VIA_NAME","DOCTYPE.NAME AS DOCTYPE_NAME","#"+".DEADLINE","#"+".ADDRESS","#" + ".CREATOR_WHERE","#"+".NUMBERVERSION","#"+".DESCRIPTION "};
    public final String[] FIELDSDATE_RECV={"FORM.NAME AS FORM_NAME","DOSSIERS.NAME AS DOSSIERS_NAME","#"+".LOCALCODE","#"+".DOCCODE","#"+".LOCALDATE","#"+".DOCDATE","STATUS.NAME AS STATUS_NAME","#"+".FROM_CDT","#"+".ABSTRACT","DEPARTMENT.NAME AS DEPARTMENT_NAME","SECURE.NAME AS SECURE_NAME","#"+".SIGNER","EXPRESS.NAME AS EXPRESS_NAME","VIA.NAME AS VIA_NAME","DOCTYPE.NAME AS DOCTYPE_NAME","#"+".DEADLINE","#"+".ADDRESS"," null as KYNHAN "};                        
    
    public final String SQL_ADD_REPORT_EXCEL_RECV_GROUPT="  LEFT JOIN USERS ON  USERS.USER_ID=DOC_TRAILER_RECV.USERRECV_ID INNER JOIN GROUPS ON  GROUPS.GROUP_ID=USERS.GROUP_ID ";
    public final String SQL_ADD_REPORT_EXCEL_SEND_GROUPT="  LEFT JOIN USERS ON  USERS.USER_ID=DOC_TRAILER_SEND.USERRECV_ID INNER JOIN GROUPS ON  GROUPS.GROUP_ID=USERS.GROUP_ID ";
    public final String[] SQL_ADD_REPORT_EXCEL_GROUPT={SQL_ADD_REPORT_EXCEL_RECV_GROUPT,SQL_ADD_REPORT_EXCEL_SEND_GROUPT};
    
    public final String SQL_ADD_REPORT_EXCEL_RECV_DEP="  LEFT JOIN USERS ON  USERS.USER_ID=DOC_TRAILER_RECV.USERRECV_ID INNER JOIN DEPARTMENT A ON  A.DEPARTMENT_ID=USERS.DEPARTMENT_ID ";
    public final String SQL_ADD_REPORT_EXCEL_SEND_DEP="  LEFT JOIN USERS ON  USERS.USER_ID=DOC_TRAILER_SEND.USERRECV_ID INNER JOIN DEPARTMENT A ON  A.DEPARTMENT_ID=USERS.DEPARTMENT_ID ";
    public final String[] SQL_ADD_REPORT_EXCEL_DEP={SQL_ADD_REPORT_EXCEL_RECV_DEP,SQL_ADD_REPORT_EXCEL_SEND_DEP};
    
    public final String SQL_WHERE_REPORT_EXCEL_RECV_GROUPT= WHERE + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION;
    public final String SQL_WHERE_REPORT_EXCEL_SEND_GROUPT=WHERE + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION + AND + OPEN + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + IS + NOT_NULL + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + DIFF + "''" + CLOSE;
    public final String[] SQL_WHERE_REPORT_EXCEL_GROUPT={SQL_WHERE_REPORT_EXCEL_RECV_GROUPT,SQL_WHERE_REPORT_EXCEL_SEND_GROUPT};
    
    public final String SQL_WHERE_REPORT_EXCEL_RECV_GROUPT_IN_DOCIDS= WHERE + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSRECV_DOC_ID + IN + OPEN + "#" + CLOSE;
    public final String SQL_WHERE_REPORT_EXCEL_SEND_GROUPT_IN_DOCIDS=WHERE + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION + AND + OPEN + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + IS + NOT_NULL + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + DIFF + "''" + CLOSE + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOC_ID + IN + OPEN + "#" + CLOSE;
    public final String[] SQL_WHERE_REPORT_EXCEL_GROUPT_IN_DOCIDS={SQL_WHERE_REPORT_EXCEL_RECV_GROUPT_IN_DOCIDS,SQL_WHERE_REPORT_EXCEL_SEND_GROUPT_IN_DOCIDS};
    
    public final String SQL_WHERE_REPORT_EXCEL_RECV_DEP_IN_DOCIDS= WHERE + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSRECV_DOC_ID + IN + OPEN + "#" + CLOSE;
    public final String SQL_WHERE_REPORT_EXCEL_SEND_DEP_IN_DOCIDS=WHERE + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION + AND + OPEN + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + IS + NOT_NULL + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + DIFF + "''" + CLOSE + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOC_ID + IN + OPEN + "#" + CLOSE;
    public final String[] SQL_WHERE_REPORT_EXCEL_DEP_IN_DOCIDS={SQL_WHERE_REPORT_EXCEL_RECV_DEP_IN_DOCIDS,SQL_WHERE_REPORT_EXCEL_SEND_DEP_IN_DOCIDS};
    
    public final String SQL_WHERE_REPORT_EXCEL_RECV_FROM_IN_DOCIDS= WHERE + TABLE_DOCSRECV + STOP + DOCSRECV_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION + AND + TABLE_DOCSRECV + STOP + DOCSRECV_DOC_ID + IN + OPEN + "#" + CLOSE;
    public final String SQL_WHERE_REPORT_EXCEL_SEND_FROM_IN_DOCIDS=WHERE + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + ">=" + QUESTION + AND + TABLE_DOCSSEND + STOP + DOCSSEND_TIMECREATE + "<" + QUESTION + AND + OPEN + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + IS + NOT_NULL + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOCCODE + DIFF + "''" + CLOSE + AND + TABLE_DOCSSEND + STOP + DOCSSEND_DOC_ID + IN + OPEN + "#" + CLOSE;
    public final String[] SQL_WHERE_REPORT_EXCEL_FROM_IN_DOCIDS={SQL_WHERE_REPORT_EXCEL_RECV_FROM_IN_DOCIDS,SQL_WHERE_REPORT_EXCEL_SEND_FROM_IN_DOCIDS};
    
    //END DOC_REPORT
    
    public final String SQL_GROUP_SELECT_ALL_GROUP_IN_RULE   =  SELECT + GROUPS_GROUP_ID + COMMA + GROUPS_NAME + COMMA + GROUPS_PARENT_ID + FROM + TABLE_GROUPS ;
    public final String SQL_GROUP_SELECT_ADD_WHERE_IN_DOC_RULE = SELECT + DISTINCT + OPEN + TABLE_USERS + STOP + USERS_GROUP_ID + CLOSE + FROM + TABLE_USERS + WHERE +  TABLE_USERS + STOP + USERS_USER_ID + IN + OPEN + SELECT + TABLE_DOC_OFFICERS + STOP + DOC_OFFICERS_USER_ID + FROM + TABLE_DOC_OFFICERS + LEFT_JOIN + TABLE_DOC_RULES + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_OFFICERS + STOP + DOC_OFFICERS_RULE_ID + LEFT_JOIN + TABLE_DOC_BOSS + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_BOSS + STOP + DOC_BOSS_RULE_ID + WHERE + TABLE_DOC_BOSS + STOP + DOC_BOSS_USER_ID + EQUAL + QUESTION + AND + TABLE_DOC_RULES + STOP + DOC_RULES_ACTIVE + DIFF + 0  + AND + TABLE_DOC_RULES + STOP + DOC_RULES_WORKFLOW_ID + EQUAL + QUESTION + CLOSE;
    public final String SQL_DEPARTMENT_SELECT_ADD_WHERE_IN_DOC_RULE_PRIORITIES = SELECT + DISTINCT + OPEN + TABLE_USERS + STOP + USERS_DEPARTMENT_ID + CLOSE + FROM + TABLE_USERS + WHERE +  TABLE_USERS + STOP + USERS_USER_ID + IN + OPEN + SELECT + TABLE_DOC_PRIORITIES + STOP + DOC_PRIORITIES_USER_ID + FROM + TABLE_DOC_PRIORITIES + LEFT_JOIN + TABLE_DOC_RULES + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_PRIORITIES + STOP + DOC_PRIORITIES_RULE_ID + LEFT_JOIN + TABLE_DOC_BOSS + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_BOSS + STOP + DOC_BOSS_RULE_ID + WHERE + TABLE_DOC_BOSS + STOP + DOC_BOSS_USER_ID + EQUAL + QUESTION + AND + TABLE_DOC_RULES + STOP + DOC_RULES_ACTIVE + DIFF + 0  + AND + TABLE_DOC_RULES + STOP + DOC_RULES_WORKFLOW_ID + EQUAL + QUESTION + CLOSE;
    public final String SQL_GROUP_ADD_WHERE_ID_BY_RULE = WHERE + GROUPS_GROUP_ID + IN + OPEN + "#" + CLOSE;
    public final String SQL_DEPARTMENT_ADD_WHERE_ID_BY_RULE = WHERE + DEPARTMENTS_DEPARTMENT_ID + IN + OPEN + "#" + CLOSE;  
    
    public final String SQL_DEPARTMENT_SELECT_ALL_DEPARTMENT_IN_RULE   =  SELECT + DEPARTMENTS_DEPARTMENT_ID + COMMA + DEPARTMENTS_NAME + COMMA + DEPARTMENTS_PARENT_ID + FROM + TABLE_DEPARTMENTS ;
    
    public final String SQL_USER_BY_GROUP_ID = SELECT + STAR + FROM + TABLE_USERS + WHERE + USERS_GROUP_ID + EQUAL + QUESTION + AND + TABLE_USERS + STOP + USERS_USER_ID + DIFF + QUESTION;
    public final String SQL_DOC_RULE_JOIN = AND  + TABLE_USERS + STOP + USERS_USER_ID + IN + OPEN + SQL_DOC_RULE_JOIN_WHERE + WHERE + TABLE_DOC_RULES + STOP + DOC_RULES_ACTIVE + DIFF + 0 + AND + TABLE_DOC_RULES + STOP + DOC_RULES_WORKFLOW_ID + EQUAL + QUESTION + AND + TABLE_DOC_BOSS + STOP + DOC_BOSS_USER_ID + EQUAL + QUESTION  + CLOSE + OR + OPEN + TABLE_USERS + STOP +  USERS_USER_ID + IN + OPEN + SQL_DOC_RULE_JOIN_WHERE_PRI  + WHERE + TABLE_DOC_RULES + STOP + DOC_RULES_ACTIVE + DIFF + 0 + AND + TABLE_DOC_RULES + STOP + DOC_RULES_WORKFLOW_ID + EQUAL + QUESTION + AND + TABLE_DOC_BOSS + STOP + DOC_BOSS_USER_ID + EQUAL + QUESTION   + CLOSE + AND + TABLE_USERS + STOP + USERS_DEPARTMENT_ID + EQUAL + QUESTION + CLOSE;
    public final String SQL_DOC_RULE_RECV_ASSIGN_BY_USER = SELECT + TABLE_DOC_TRAILER_RECV + STOP + DOC_TRAILER_RECV_USERRECV_ID + FROM + TABLE_DOC_TRAILER_RECV + WHERE + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION ;
    public final String SQL_DEPARTMENT_SELECT_ADD_WHERE_IN_DOC_RULE = SELECT + DISTINCT + OPEN + TABLE_USERS + STOP + USERS_DEPARTMENT_ID + CLOSE + FROM + TABLE_USERS + WHERE +  TABLE_USERS + STOP + USERS_USER_ID + IN + OPEN + SELECT + TABLE_DOC_OFFICERS + STOP + DOC_OFFICERS_USER_ID + FROM + TABLE_DOC_OFFICERS + LEFT_JOIN + TABLE_DOC_RULES + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_OFFICERS + STOP + DOC_OFFICERS_RULE_ID + LEFT_JOIN + TABLE_DOC_BOSS + ON + TABLE_DOC_RULES + STOP + DOC_RULES_RULE_ID + EQUAL + TABLE_DOC_BOSS + STOP + DOC_BOSS_RULE_ID + WHERE + TABLE_DOC_BOSS + STOP + DOC_BOSS_USER_ID + EQUAL + QUESTION + AND + TABLE_DOC_RULES + STOP + DOC_RULES_ACTIVE + DIFF + 0  + AND + TABLE_DOC_RULES + STOP + DOC_RULES_WORKFLOW_ID + EQUAL + QUESTION + CLOSE;
    public final String SQL_USER_RECV_DOCRECV   =  SELECT + DOC_TRAILER_RECV_USERSEND_ID + FROM + TABLE_DOC_TRAILER_RECV + WHERE + DOC_TRAILER_RECV_DOC_ID + EQUAL + QUESTION + AND + DOC_TRAILER_RECV_USERRECV_ID + EQUAL + QUESTION ;

}
